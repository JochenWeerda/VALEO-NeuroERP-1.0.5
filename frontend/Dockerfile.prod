# Multi-stage build für optimierte Produktions-Images
FROM node:18-alpine as builder

# Arbeitsverzeichnis setzen
WORKDIR /app

# Package-Dateien kopieren
COPY package*.json ./

# Abhängigkeiten installieren
RUN npm ci --only=production

# Anwendungscode kopieren
COPY . .

# Build für Produktion
RUN npm run build

# Produktions-Image mit Nginx
FROM nginx:alpine as production

# Nginx-Konfiguration kopieren
COPY --from=builder /app/dist /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Nicht-root Benutzer erstellen
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Berechtigungen setzen
RUN chown -R nextjs:nodejs /usr/share/nginx/html && \
    chown -R nextjs:nodejs /var/cache/nginx && \
    chown -R nextjs:nodejs /var/log/nginx && \
    chown -R nextjs:nodejs /etc/nginx/conf.d

# Nginx als nicht-root Benutzer starten
RUN touch /var/run/nginx.pid && \
    chown -R nextjs:nodejs /var/run/nginx.pid

# Port freigeben
EXPOSE 80

# Health Check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# Benutzer wechseln
USER nextjs

# Nginx starten
CMD ["nginx", "-g", "daemon off;"] 