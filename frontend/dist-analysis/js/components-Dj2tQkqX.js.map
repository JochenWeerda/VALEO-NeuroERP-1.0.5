{"version":3,"mappings":"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","names":["Component","jsx","jsxs","lazy","Suspense","useEffect","useMemo","Router","ReceiptIcon","EInvoicingIcon","Fragment","useRef","useState","useCallback"],"ignoreList":[],"sources":["../../src/components/ErrorBoundary.tsx","../../src/components/PreloadRouter.tsx","../../src/components/Navigation.tsx","../../src/components/common/TabPanel.tsx","../../src/components/barcode/BarcodeScanner.tsx","../../src/components/inventory/StockOpnameInterface.tsx","../../src/components/voucher/VoucherManagement.tsx"],"sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { Alert, Button, Box, Typography, Paper } from '@mui/material';\r\nimport { Refresh as RefreshIcon, BugReport as BugReportIcon } from '@mui/icons-material';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  errorInfo?: ErrorInfo;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('Error Boundary caught an error:', error, errorInfo);\r\n    this.setState({ error, errorInfo });\r\n  }\r\n\r\n  handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: '100vh',\r\n            p: 3,\r\n            bgcolor: 'background.default'\r\n          }}\r\n        >\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 4,\r\n              maxWidth: 600,\r\n              textAlign: 'center',\r\n              borderRadius: 2\r\n            }}\r\n          >\r\n            <BugReportIcon\r\n              sx={{\r\n                fontSize: 64,\r\n                color: 'error.main',\r\n                mb: 2\r\n              }}\r\n            />\r\n            \r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom color=\"error.main\">\r\n              Ein Fehler ist aufgetreten\r\n            </Typography>\r\n            \r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n              Entschuldigung, etwas ist schiefgelaufen. Bitte versuchen Sie es erneut oder kontaktieren Sie den Support.\r\n            </Typography>\r\n\r\n            {process.env.NODE_ENV === 'development' && this.state.error && (\r\n              <Alert severity=\"error\" sx={{ mb: 3, textAlign: 'left' }}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  Fehlerdetails (nur in Entwicklung):\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"pre\" sx={{ fontSize: '0.75rem' }}>\r\n                  {this.state.error.toString()}\r\n                </Typography>\r\n              </Alert>\r\n            )}\r\n\r\n            <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<RefreshIcon />}\r\n                onClick={this.handleReset}\r\n                sx={{ minWidth: 140 }}\r\n              >\r\n                Erneut versuchen\r\n              </Button>\r\n              \r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<RefreshIcon />}\r\n                onClick={this.handleReload}\r\n                sx={{ minWidth: 140 }}\r\n              >\r\n                Seite neu laden\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n} ","import React, { Suspense, lazy, useEffect, useMemo } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\r\nimport { Box, CircularProgress, Typography } from '@mui/material';\r\nimport { preloadService, CRITICAL_ROUTES, lazyWithPreload } from '../services/PreloadService';\r\n\r\n// Lazy Loading mit Preloading-Unterstützung für kritische Routen\r\nconst Dashboard = lazyWithPreload(\r\n  () => import('./neuroflow/NeuroFlowDashboard'),\r\n  '/dashboard'\r\n);\r\n\r\nconst LoginForm = lazy(() => import('./auth/LoginForm'));\r\n\r\nconst StreckengeschaeftPage = lazyWithPreload(\r\n  () => import('../pages/StreckengeschaeftPage').then(module => ({ default: module.StreckengeschaeftPage })),\r\n  '/streckengeschaeft'\r\n);\r\n\r\nconst POSPage = lazyWithPreload(\r\n  () => import('../pages/POS/POSPage'),\r\n  '/pos'\r\n);\r\n\r\nconst DailyReportPage = lazyWithPreload(\r\n  () => import('../pages/POS/DailyReportPage'),\r\n  '/daily-report'\r\n);\r\n\r\nconst EInvoicingPage = lazyWithPreload(\r\n  () => import('./e-invoicing/EInvoicingPage'),\r\n  '/e-invoicing'\r\n);\r\n\r\n// Loading Component für Routen mit Preload-Status\r\nconst RouteLoader: React.FC<{ routeName: string; isPreloaded?: boolean }> = ({ \r\n  routeName, \r\n  isPreloaded = false \r\n}) => (\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      flexDirection: 'column',\r\n      gap: 2\r\n    }}\r\n  >\r\n    <CircularProgress size={60} />\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"h6\" sx={{ mb: 1 }}>\r\n        {routeName} wird geladen...\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n        Bitte warten Sie einen Moment\r\n      </Typography>\r\n      {isPreloaded && (\r\n        <Typography variant=\"caption\" color=\"success.main\">\r\n          ✓ Route wurde bereits vorbereitet\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\n// Protected Route Component\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, isAuthenticated }) => {\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  return <>{children}</>;\r\n};\r\n\r\n// Route Component mit Preloading\r\ninterface PreloadRouteProps {\r\n  route: string;\r\n  component: React.LazyExoticComponent<React.ComponentType<any>>;\r\n  isAuthenticated: boolean;\r\n  routeName: string;\r\n}\r\n\r\nconst PreloadRoute: React.FC<PreloadRouteProps> = ({ \r\n  route, \r\n  component: Component, \r\n  isAuthenticated, \r\n  routeName \r\n}) => {\r\n  const preloadStatus = preloadService.getPreloadStatus();\r\n  const isPreloaded = preloadStatus[route] || false;\r\n\r\n  return (\r\n    <ProtectedRoute isAuthenticated={isAuthenticated}>\r\n      <Suspense fallback={<RouteLoader routeName={routeName} isPreloaded={isPreloaded} />}>\r\n        <Component />\r\n      </Suspense>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\n// Navigation Observer für Preloading\r\nconst NavigationObserver: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // Preload basierend auf aktueller Route\r\n    preloadService.preloadBasedOnCurrentRoute(location.pathname);\r\n    \r\n    // Abhängigkeiten der aktuellen Route preloaden\r\n    preloadService.preloadDependencies(location.pathname);\r\n  }, [location.pathname]);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// Main Router Component mit Preloading\r\ninterface AppRouterProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nexport const PreloadRouter: React.FC<AppRouterProps> = ({ isAuthenticated }) => {\r\n  // Kritische Routen beim Start preloaden\r\n  useEffect(() => {\r\n    preloadService.preloadCriticalRoutes();\r\n  }, []);\r\n\r\n  // Route-Konfiguration mit Preloading\r\n  const routes = useMemo(() => [\r\n    {\r\n      path: '/login',\r\n      component: LoginForm,\r\n      routeName: 'Login',\r\n      protected: false\r\n    },\r\n    {\r\n      path: '/',\r\n      component: Dashboard.Component,\r\n      routeName: 'Dashboard',\r\n      protected: true,\r\n      route: '/dashboard'\r\n    },\r\n    {\r\n      path: '/dashboard',\r\n      component: Dashboard.Component,\r\n      routeName: 'Dashboard',\r\n      protected: true,\r\n      route: '/dashboard'\r\n    },\r\n    {\r\n      path: '/streckengeschaeft',\r\n      component: StreckengeschaeftPage.Component,\r\n      routeName: 'Streckengeschäft',\r\n      protected: true,\r\n      route: '/streckengeschaeft'\r\n    },\r\n    {\r\n      path: '/pos',\r\n      component: POSPage.Component,\r\n      routeName: 'POS-System',\r\n      protected: true,\r\n      route: '/pos'\r\n    },\r\n    {\r\n      path: '/daily-report',\r\n      component: DailyReportPage.Component,\r\n      routeName: 'Tagesbericht',\r\n      protected: true,\r\n      route: '/daily-report'\r\n    },\r\n    {\r\n      path: '/e-invoicing',\r\n      component: EInvoicingPage.Component,\r\n      routeName: 'E-Invoicing',\r\n      protected: true,\r\n      route: '/e-invoicing'\r\n    }\r\n  ], []);\r\n\r\n  return (\r\n    <Router>\r\n      <NavigationObserver>\r\n        <Routes>\r\n          {routes.map(({ path, component: Component, routeName, protected: isProtected, route }) => (\r\n            <Route\r\n              key={path}\r\n              path={path}\r\n              element={\r\n                isProtected ? (\r\n                  <PreloadRoute\r\n                    route={route || path}\r\n                    component={Component}\r\n                    isAuthenticated={isAuthenticated}\r\n                    routeName={routeName}\r\n                  />\r\n                ) : (\r\n                  <Suspense fallback={<RouteLoader routeName={routeName} />}>\r\n                    <Component />\r\n                  </Suspense>\r\n                )\r\n              }\r\n            />\r\n          ))}\r\n\r\n          {/* Fallback Route */}\r\n          <Route\r\n            path=\"*\"\r\n            element={\r\n              <ProtectedRoute isAuthenticated={isAuthenticated}>\r\n                <Navigate to=\"/dashboard\" replace />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n        </Routes>\r\n      </NavigationObserver>\r\n    </Router>\r\n  );\r\n};\r\n\r\n// Debug-Komponente für Preload-Status (nur in Entwicklung)\r\nexport const PreloadStatusDebug: React.FC = () => {\r\n  const [preloadStatus, setPreloadStatus] = React.useState<Record<string, boolean>>({});\r\n\r\n  useEffect(() => {\r\n    const updateStatus = () => {\r\n      setPreloadStatus(preloadService.getPreloadStatus());\r\n    };\r\n\r\n    updateStatus();\r\n    const interval = setInterval(updateStatus, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (process.env.NODE_ENV !== 'development') return null;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'fixed',\r\n        bottom: 16,\r\n        right: 16,\r\n        bgcolor: 'rgba(0,0,0,0.8)',\r\n        color: 'white',\r\n        p: 2,\r\n        borderRadius: 1,\r\n        fontSize: '0.75rem',\r\n        zIndex: 9999\r\n      }}\r\n    >\r\n      <Typography variant=\"caption\" sx={{ display: 'block', mb: 1 }}>\r\n        🔄 Preload Status:\r\n      </Typography>\r\n      {Object.entries(preloadStatus).map(([route, isLoaded]) => (\r\n        <div key={route} style={{ marginBottom: '2px' }}>\r\n          {isLoaded ? '✅' : '⏳'} {route}\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  );\r\n}; ","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { \r\n  AppBar, \r\n  Toolbar, \r\n  Button, \r\n  Box, \r\n  Typography, \r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Store as StoreIcon,\r\n  PointOfSale as POSIcon,\r\n  Receipt as ReceiptIcon,\r\n  Description as EInvoicingIcon,\r\n  Menu as MenuIcon,\r\n  AccountCircle as AccountIcon\r\n} from '@mui/icons-material';\r\nimport { preloadService } from '../services/PreloadService';\r\n\r\n// Navigation-Items mit Preloading-Konfiguration\r\nconst navigationItems = [\r\n  {\r\n    path: '/dashboard',\r\n    label: 'Dashboard',\r\n    icon: DashboardIcon,\r\n    priority: 'critical'\r\n  },\r\n  {\r\n    path: '/streckengeschaeft',\r\n    label: 'Streckengeschäft',\r\n    icon: StoreIcon,\r\n    priority: 'high'\r\n  },\r\n  {\r\n    path: '/pos',\r\n    label: 'POS-System',\r\n    icon: POSIcon,\r\n    priority: 'high'\r\n  },\r\n  {\r\n    path: '/daily-report',\r\n    label: 'Tagesbericht',\r\n    icon: ReceiptIcon,\r\n    priority: 'medium'\r\n  },\r\n  {\r\n    path: '/e-invoicing',\r\n    label: 'E-Invoicing',\r\n    icon: EInvoicingIcon,\r\n    priority: 'medium'\r\n  }\r\n];\r\n\r\n// Navigation Link mit Preloading\r\ninterface NavigationLinkProps {\r\n  to: string;\r\n  label: string;\r\n  icon: React.ComponentType<any>;\r\n  isActive: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavigationLink: React.FC<NavigationLinkProps> = ({ \r\n  to, \r\n  label, \r\n  icon: Icon, \r\n  isActive, \r\n  onClick \r\n}) => {\r\n  const handleMouseEnter = () => {\r\n    // Preload Route beim Hover\r\n    preloadService.preloadRoute(to);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      component={Link}\r\n      to={to}\r\n      startIcon={<Icon />}\r\n      onClick={onClick}\r\n      onMouseEnter={handleMouseEnter}\r\n      data-route={to}\r\n      sx={{\r\n        color: isActive ? 'primary.main' : 'inherit',\r\n        backgroundColor: isActive ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\r\n        '&:hover': {\r\n          backgroundColor: 'rgba(25, 118, 210, 0.12)',\r\n          color: 'primary.main'\r\n        },\r\n        textTransform: 'none',\r\n        fontWeight: isActive ? 600 : 400,\r\n        minWidth: 'auto',\r\n        px: 2,\r\n        py: 1\r\n      }}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\n// Mobile Navigation Item\r\ninterface MobileNavigationItemProps {\r\n  to: string;\r\n  label: string;\r\n  icon: React.ComponentType<any>;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst MobileNavigationItem: React.FC<MobileNavigationItemProps> = ({ \r\n  to, \r\n  label, \r\n  icon: Icon, \r\n  isActive, \r\n  onClick \r\n}) => {\r\n  const handleMouseEnter = () => {\r\n    preloadService.preloadRoute(to);\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      component={Link}\r\n      to={to}\r\n      onClick={onClick}\r\n      onMouseEnter={handleMouseEnter}\r\n      data-route={to}\r\n      sx={{\r\n        backgroundColor: isActive ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\r\n        '&:hover': {\r\n          backgroundColor: 'rgba(25, 118, 210, 0.12)'\r\n        }\r\n      }}\r\n    >\r\n      <ListItemIcon>\r\n        <Icon color={isActive ? 'primary' : 'inherit'} />\r\n      </ListItemIcon>\r\n      <ListItemText \r\n        primary={label} \r\n        sx={{ \r\n          fontWeight: isActive ? 600 : 400,\r\n          color: isActive ? 'primary.main' : 'inherit'\r\n        }} \r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\n// Main Navigation Component\r\ninterface NavigationProps {\r\n  isAuthenticated: boolean;\r\n  onLogout?: () => void;\r\n}\r\n\r\nexport const Navigation: React.FC<NavigationProps> = ({ \r\n  isAuthenticated, \r\n  onLogout \r\n}) => {\r\n  const location = useLocation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  // Preload kritische Routen beim Mount\r\n  React.useEffect(() => {\r\n    if (isAuthenticated) {\r\n      preloadService.preloadCriticalRoutes();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleNavigationClick = () => {\r\n    if (isMobile) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Desktop Navigation */}\r\n      <AppBar \r\n        position=\"static\" \r\n        elevation={1}\r\n        sx={{ \r\n          backgroundColor: 'white',\r\n          color: 'text.primary',\r\n          borderBottom: '1px solid',\r\n          borderColor: 'divider'\r\n        }}\r\n      >\r\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\r\n          {/* Logo und Titel */}\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography \r\n              variant=\"h6\" \r\n              component=\"div\" \r\n              sx={{ \r\n                fontWeight: 600,\r\n                color: 'primary.main',\r\n                mr: 4\r\n              }}\r\n            >\r\n              VALEO NeuroERP\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Desktop Navigation Links */}\r\n          {!isMobile && (\r\n            <Box sx={{ display: 'flex', gap: 1 }}>\r\n              {navigationItems.map((item) => (\r\n                <NavigationLink\r\n                  key={item.path}\r\n                  to={item.path}\r\n                  label={item.label}\r\n                  icon={item.icon}\r\n                  isActive={location.pathname === item.path}\r\n                />\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Mobile Menu Button */}\r\n          {isMobile && (\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n\r\n          {/* User Menu */}\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <IconButton color=\"inherit\">\r\n              <AccountIcon />\r\n            </IconButton>\r\n            {onLogout && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={onLogout}\r\n                sx={{ textTransform: 'none' }}\r\n              >\r\n                Abmelden\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Mobile Navigation Drawer */}\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true // Bessere Performance auf Mobile\r\n        }}\r\n        sx={{\r\n          display: { xs: 'block', md: 'none' },\r\n          '& .MuiDrawer-paper': { \r\n            boxSizing: 'border-box', \r\n            width: 280 \r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2 }}>\r\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600 }}>\r\n            Navigation\r\n          </Typography>\r\n          <List>\r\n            {navigationItems.map((item) => (\r\n              <MobileNavigationItem\r\n                key={item.path}\r\n                to={item.path}\r\n                label={item.label}\r\n                icon={item.icon}\r\n                isActive={location.pathname === item.path}\r\n                onClick={handleNavigationClick}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\n// Preload-Status Indicator (nur in Entwicklung)\r\nexport const PreloadIndicator: React.FC = () => {\r\n  const [preloadStatus, setPreloadStatus] = React.useState<Record<string, boolean>>({});\r\n\r\n  React.useEffect(() => {\r\n    const updateStatus = () => {\r\n      setPreloadStatus(preloadService.getPreloadStatus());\r\n    };\r\n\r\n    updateStatus();\r\n    const interval = setInterval(updateStatus, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (process.env.NODE_ENV !== 'development') return null;\r\n\r\n  const loadedCount = Object.values(preloadStatus).filter(Boolean).length;\r\n  const totalCount = Object.keys(preloadStatus).length;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'fixed',\r\n        top: 16,\r\n        right: 16,\r\n        bgcolor: 'rgba(0,0,0,0.8)',\r\n        color: 'white',\r\n        p: 1,\r\n        borderRadius: 1,\r\n        fontSize: '0.75rem',\r\n        zIndex: 9999\r\n      }}\r\n    >\r\n      🔄 {loadedCount}/{totalCount} Routen preloaded\r\n    </Box>\r\n  );\r\n}; ","import React from 'react';\r\nimport { Box, BoxProps } from '@mui/material';\r\n\r\ninterface TabPanelProps extends BoxProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\n/**\r\n * TabPanel Komponente für Tab-Navigation\r\n * Zeigt den Inhalt des aktiven Tabs an\r\n */\r\nexport const TabPanel: React.FC<TabPanelProps> = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPanel; ","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { Card, Typography, Button, Alert, Box, CircularProgress } from '@mui/material';\r\nimport { CameraAlt as CameraIcon, QrCode as QrCodeIcon } from '@mui/icons-material';\r\nimport Quagga from 'quagga';\r\n\r\ninterface BarcodeScannerProps {\r\n  onBarcodeDetected: (barcode: string) => void;\r\n  onError?: (error: string) => void;\r\n  autoStart?: boolean;\r\n  className?: string;\r\n}\r\n\r\ninterface ScanResult {\r\n  codeResult: {\r\n    code: string;\r\n    format: string;\r\n  };\r\n}\r\n\r\nexport const BarcodeScanner: React.FC<BarcodeScannerProps> = ({\r\n  onBarcodeDetected,\r\n  onError,\r\n  autoStart = false,\r\n  className = ''\r\n}) => {\r\n  const scannerRef = useRef<HTMLDivElement>(null);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastScannedCode, setLastScannedCode] = useState<string | null>(null);\r\n\r\n  // Barcode-Erkennung Callback\r\n  const onDetected = useCallback((result: ScanResult) => {\r\n    const code = result.codeResult.code;\r\n    if (code && code !== lastScannedCode) {\r\n      setLastScannedCode(code);\r\n      onBarcodeDetected(code);\r\n      \r\n      // Kurze Pause nach erfolgreichem Scan\r\n      setTimeout(() => {\r\n        setLastScannedCode(null);\r\n      }, 2000);\r\n    }\r\n  }, [onBarcodeDetected, lastScannedCode]);\r\n\r\n  // Scanner initialisieren\r\n  const initializeScanner = useCallback(async () => {\r\n    if (!scannerRef.current) return;\r\n\r\n    try {\r\n      setError(null);\r\n      setIsInitialized(false);\r\n\r\n      await Quagga.init({\r\n        inputStream: {\r\n          name: \"Live\",\r\n          type: \"LiveStream\",\r\n          target: scannerRef.current,\r\n          constraints: {\r\n            width: { min: 640, ideal: 1280, max: 1920 },\r\n            height: { min: 480, ideal: 720, max: 1080 },\r\n            facingMode: \"environment\" // Rückkamera bevorzugen\r\n          },\r\n        },\r\n        locator: {\r\n          patchSize: \"medium\",\r\n          halfSample: true\r\n        },\r\n        numOfWorkers: navigator.hardwareConcurrency || 4,\r\n        frequency: 10,\r\n        decoder: {\r\n          readers: [\r\n            \"ean_reader\",\r\n            \"ean_8_reader\",\r\n            \"code_128_reader\",\r\n            \"code_39_reader\",\r\n            \"upc_reader\",\r\n            \"upc_e_reader\"\r\n          ]\r\n        },\r\n        locate: true\r\n      });\r\n\r\n      Quagga.onDetected(onDetected);\r\n      setIsInitialized(true);\r\n      \r\n      if (autoStart) {\r\n        startScanning();\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Scanner-Initialisierung fehlgeschlagen';\r\n      setError(errorMessage);\r\n      onError?.(errorMessage);\r\n    }\r\n  }, [onDetected, autoStart, onError]);\r\n\r\n  // Scanner starten\r\n  const startScanning = useCallback(async () => {\r\n    if (!isInitialized) {\r\n      await initializeScanner();\r\n    }\r\n    \r\n    try {\r\n      await Quagga.start();\r\n      setIsScanning(true);\r\n      setError(null);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Scanner konnte nicht gestartet werden';\r\n      setError(errorMessage);\r\n      onError?.(errorMessage);\r\n    }\r\n  }, [isInitialized, initializeScanner, onError]);\r\n\r\n  // Scanner stoppen\r\n  const stopScanning = useCallback(() => {\r\n    Quagga.stop();\r\n    setIsScanning(false);\r\n  }, []);\r\n\r\n  // Komponente aufräumen\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isScanning) {\r\n        Quagga.stop();\r\n      }\r\n    };\r\n  }, [isScanning]);\r\n\r\n  // Initialisierung beim Mount\r\n  useEffect(() => {\r\n    if (autoStart) {\r\n      initializeScanner();\r\n    }\r\n  }, [autoStart, initializeScanner]);\r\n\r\n  return (\r\n    <Card className={`p-4 ${className}`}>\r\n      <Box className=\"flex items-center justify-between mb-4\">\r\n        <Typography variant=\"h6\" className=\"flex items-center gap-2\">\r\n          <QrCodeIcon />\r\n          Barcode-Scanner\r\n        </Typography>\r\n        \r\n        <Box className=\"flex gap-2\">\r\n          {!isScanning ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<CameraIcon />}\r\n              onClick={startScanning}\r\n              disabled={!isInitialized && !autoStart}\r\n            >\r\n              Scanner starten\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={stopScanning}\r\n            >\r\n              Scanner stoppen\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" className=\"mb-4\">\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {lastScannedCode && (\r\n        <Alert severity=\"success\" className=\"mb-4\">\r\n          Barcode erkannt: <strong>{lastScannedCode}</strong>\r\n        </Alert>\r\n      )}\r\n\r\n      <Box className=\"relative\">\r\n        <div\r\n          ref={scannerRef}\r\n          className=\"w-full h-64 bg-gray-100 rounded-lg overflow-hidden border-2 border-gray-300\"\r\n        >\r\n          {!isScanning && (\r\n            <Box className=\"flex items-center justify-center h-full\">\r\n              <Box className=\"text-center\">\r\n                <CameraIcon className=\"text-4xl text-gray-400 mb-2\" />\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Scanner bereit - Klicken Sie auf \"Scanner starten\"\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </div>\r\n\r\n        {isScanning && (\r\n          <Box className=\"absolute inset-0 flex items-center justify-center\">\r\n            <CircularProgress size={40} />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      <Box className=\"mt-4\">\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          Unterstützte Formate: EAN-13, EAN-8, Code 128, Code 39, UPC\r\n        </Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Box,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Inventory as InventoryIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Warning as WarningIcon\r\n} from '@mui/icons-material';\r\nimport { BarcodeScanner } from '../barcode/BarcodeScanner';\r\n\r\ninterface StockOpnameItem {\r\n  id: string;\r\n  product_id: string;\r\n  product_name: string;\r\n  product_code: string;\r\n  expected_quantity: number;\r\n  actual_quantity: number;\r\n  difference: number;\r\n  unit: string;\r\n  notes?: string;\r\n}\r\n\r\ninterface StockOpname {\r\n  id: string;\r\n  number: string;\r\n  date: string;\r\n  status: 'offen' | 'in_bearbeitung' | 'abgeschlossen' | 'storniert';\r\n  responsible_person: string;\r\n  total_items: number;\r\n  completed_items: number;\r\n  created_at: string;\r\n}\r\n\r\ninterface StockOpnameInterfaceProps {\r\n  className?: string;\r\n}\r\n\r\nexport const StockOpnameInterface: React.FC<StockOpnameInterfaceProps> = ({\r\n  className = ''\r\n}) => {\r\n  const [stockOpnames, setStockOpnames] = useState<StockOpname[]>([]);\r\n  const [currentOpname, setCurrentOpname] = useState<StockOpname | null>(null);\r\n  const [opnameItems, setOpnameItems] = useState<StockOpnameItem[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  \r\n  // Dialog States\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\r\n  const [editItemDialogOpen, setEditItemDialogOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState<StockOpnameItem | null>(null);\r\n  \r\n  // Form States\r\n  const [newOpnameData, setNewOpnameData] = useState({\r\n    responsible_person: '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n  \r\n  const [editItemData, setEditItemData] = useState({\r\n    actual_quantity: 0,\r\n    notes: ''\r\n  });\r\n\r\n  // Stock Opnames laden\r\n  const loadStockOpnames = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/stock-opname');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStockOpnames(data.stock_opnames || []);\r\n      } else {\r\n        throw new Error('Fehler beim Laden der Inventuren');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Neue Inventur erstellen\r\n  const createStockOpname = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/api/stock-opname', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newOpnameData)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSuccess('Inventur erfolgreich erstellt');\r\n        setCreateDialogOpen(false);\r\n        setNewOpnameData({ responsible_person: '', date: new Date().toISOString().split('T')[0] });\r\n        loadStockOpnames();\r\n      } else {\r\n        throw new Error('Fehler beim Erstellen der Inventur');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [newOpnameData, loadStockOpnames]);\r\n\r\n  // Inventur öffnen\r\n  const openStockOpname = useCallback(async (opname: StockOpname) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`/api/stock-opname/${opname.id}/items`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setOpnameItems(data.items || []);\r\n        setCurrentOpname(opname);\r\n      } else {\r\n        throw new Error('Fehler beim Laden der Inventur-Details');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Barcode-Scan Handler\r\n  const handleBarcodeDetected = useCallback((barcode: string) => {\r\n    // Produkt über Barcode suchen und zur Inventur hinzufügen\r\n    console.log('Barcode erkannt:', barcode);\r\n    // TODO: API-Call zum Hinzufügen des Produkts\r\n  }, []);\r\n\r\n  // Item bearbeiten\r\n  const editItem = useCallback((item: StockOpnameItem) => {\r\n    setSelectedItem(item);\r\n    setEditItemData({\r\n      actual_quantity: item.actual_quantity,\r\n      notes: item.notes || ''\r\n    });\r\n    setEditItemDialogOpen(true);\r\n  }, []);\r\n\r\n  // Item speichern\r\n  const saveItem = useCallback(async () => {\r\n    if (!selectedItem) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/stock-opname/items/${selectedItem.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(editItemData)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setSuccess('Artikel erfolgreich aktualisiert');\r\n        setEditItemDialogOpen(false);\r\n        setSelectedItem(null);\r\n        // Items neu laden\r\n        if (currentOpname) {\r\n          openStockOpname(currentOpname);\r\n        }\r\n      } else {\r\n        throw new Error('Fehler beim Aktualisieren des Artikels');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [selectedItem, editItemData, currentOpname, openStockOpname]);\r\n\r\n  // Inventur abschließen\r\n  const closeStockOpname = useCallback(async () => {\r\n    if (!currentOpname) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/stock-opname/${currentOpname.id}/close`, {\r\n        method: 'POST'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setSuccess('Inventur erfolgreich abgeschlossen');\r\n        setCurrentOpname(null);\r\n        setOpnameItems([]);\r\n        loadStockOpnames();\r\n      } else {\r\n        throw new Error('Fehler beim Abschließen der Inventur');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [currentOpname, loadStockOpnames]);\r\n\r\n  // Status-Farbe\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'offen': return 'default';\r\n      case 'in_bearbeitung': return 'warning';\r\n      case 'abgeschlossen': return 'success';\r\n      case 'storniert': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  // Status-Text\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'offen': return 'Offen';\r\n      case 'in_bearbeitung': return 'In Bearbeitung';\r\n      case 'abgeschlossen': return 'Abgeschlossen';\r\n      case 'storniert': return 'Storniert';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  // Progress berechnen\r\n  const getProgress = (opname: StockOpname) => {\r\n    return opname.total_items > 0 ? (opname.completed_items / opname.total_items) * 100 : 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStockOpnames();\r\n  }, [loadStockOpnames]);\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Header */}\r\n      <Box className=\"flex items-center justify-between\">\r\n        <Typography variant=\"h4\" className=\"flex items-center gap-2\">\r\n          <InventoryIcon />\r\n          Inventur-Verwaltung\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => setCreateDialogOpen(true)}\r\n        >\r\n          Neue Inventur\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Alerts */}\r\n      {error && (\r\n        <Alert severity=\"error\" onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" onClose={() => setSuccess(null)}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Inventur-Liste */}\r\n      {!currentOpname && (\r\n        <Card className=\"p-4\">\r\n          <Typography variant=\"h6\" className=\"mb-4\">\r\n            Inventuren\r\n          </Typography>\r\n          \r\n          {loading ? (\r\n            <Box className=\"flex justify-center p-8\">\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Nummer</TableCell>\r\n                    <TableCell>Datum</TableCell>\r\n                    <TableCell>Verantwortlicher</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Fortschritt</TableCell>\r\n                    <TableCell>Aktionen</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {stockOpnames.map((opname) => (\r\n                    <TableRow key={opname.id} hover>\r\n                      <TableCell>{opname.number}</TableCell>\r\n                      <TableCell>{new Date(opname.date).toLocaleDateString('de-DE')}</TableCell>\r\n                      <TableCell>{opname.responsible_person}</TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={getStatusText(opname.status)}\r\n                          color={getStatusColor(opname.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Box className=\"flex items-center gap-2\">\r\n                          <Box className=\"w-16 bg-gray-200 rounded-full h-2\">\r\n                            <Box\r\n                              className=\"bg-blue-600 h-2 rounded-full\"\r\n                              style={{ width: `${getProgress(opname)}%` }}\r\n                            />\r\n                          </Box>\r\n                          <Typography variant=\"body2\">\r\n                            {opname.completed_items}/{opname.total_items}\r\n                          </Typography>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          size=\"small\"\r\n                          onClick={() => openStockOpname(opname)}\r\n                          disabled={opname.status === 'abgeschlossen'}\r\n                        >\r\n                          Öffnen\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </Card>\r\n      )}\r\n\r\n      {/* Inventur-Details */}\r\n      {currentOpname && (\r\n        <div className=\"space-y-4\">\r\n          {/* Header */}\r\n          <Card className=\"p-4\">\r\n            <Box className=\"flex items-center justify-between mb-4\">\r\n              <Box>\r\n                <Typography variant=\"h6\">\r\n                  Inventur: {currentOpname.number}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {new Date(currentOpname.date).toLocaleDateString('de-DE')} - {currentOpname.responsible_person}\r\n                </Typography>\r\n              </Box>\r\n              <Box className=\"flex gap-2\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    setCurrentOpname(null);\r\n                    setOpnameItems([]);\r\n                  }}\r\n                >\r\n                  Zurück\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  startIcon={<CheckCircleIcon />}\r\n                  onClick={closeStockOpname}\r\n                  disabled={currentOpname.status === 'abgeschlossen'}\r\n                >\r\n                  Inventur abschließen\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            \r\n            <Chip\r\n              label={getStatusText(currentOpname.status)}\r\n              color={getStatusColor(currentOpname.status)}\r\n            />\r\n          </Card>\r\n\r\n          {/* Barcode-Scanner */}\r\n          <BarcodeScanner\r\n            onBarcodeDetected={handleBarcodeDetected}\r\n            onError={setError}\r\n            className=\"mb-4\"\r\n          />\r\n\r\n          {/* Artikel-Liste */}\r\n          <Card className=\"p-4\">\r\n            <Typography variant=\"h6\" className=\"mb-4\">\r\n              Inventur-Artikel\r\n            </Typography>\r\n            \r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Produkt</TableCell>\r\n                    <TableCell>Code</TableCell>\r\n                    <TableCell align=\"right\">Erwartet</TableCell>\r\n                    <TableCell align=\"right\">Tatsächlich</TableCell>\r\n                    <TableCell align=\"right\">Differenz</TableCell>\r\n                    <TableCell>Notizen</TableCell>\r\n                    <TableCell>Aktionen</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {opnameItems.map((item) => (\r\n                    <TableRow key={item.id} hover>\r\n                      <TableCell>{item.product_name}</TableCell>\r\n                      <TableCell>{item.product_code}</TableCell>\r\n                      <TableCell align=\"right\">{item.expected_quantity} {item.unit}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <span className={item.actual_quantity !== item.expected_quantity ? 'text-red-600 font-semibold' : ''}>\r\n                          {item.actual_quantity} {item.unit}\r\n                        </span>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Chip\r\n                          label={`${item.difference > 0 ? '+' : ''}${item.difference}`}\r\n                          color={item.difference === 0 ? 'success' : 'warning'}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {item.notes && (\r\n                          <Tooltip title={item.notes}>\r\n                            <WarningIcon color=\"warning\" fontSize=\"small\" />\r\n                          </Tooltip>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => editItem(item)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Neue Inventur Dialog */}\r\n      <Dialog open={createDialogOpen} onClose={() => setCreateDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Neue Inventur erstellen</DialogTitle>\r\n        <DialogContent>\r\n          <Box className=\"space-y-4 pt-2\">\r\n            <TextField\r\n              label=\"Verantwortlicher\"\r\n              fullWidth\r\n              value={newOpnameData.responsible_person}\r\n              onChange={(e) => setNewOpnameData(prev => ({ ...prev, responsible_person: e.target.value }))}\r\n            />\r\n            <TextField\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              fullWidth\r\n              value={newOpnameData.date}\r\n              onChange={(e) => setNewOpnameData(prev => ({ ...prev, date: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setCreateDialogOpen(false)}>\r\n            Abbrechen\r\n          </Button>\r\n          <Button onClick={createStockOpname} variant=\"contained\">\r\n            Erstellen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Artikel bearbeiten Dialog */}\r\n      <Dialog open={editItemDialogOpen} onClose={() => setEditItemDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Artikel bearbeiten</DialogTitle>\r\n        <DialogContent>\r\n          {selectedItem && (\r\n            <Box className=\"space-y-4 pt-2\">\r\n              <Typography variant=\"subtitle1\">\r\n                {selectedItem.product_name} ({selectedItem.product_code})\r\n              </Typography>\r\n              <TextField\r\n                label=\"Tatsächliche Menge\"\r\n                type=\"number\"\r\n                fullWidth\r\n                value={editItemData.actual_quantity}\r\n                onChange={(e) => setEditItemData(prev => ({ ...prev, actual_quantity: Number(e.target.value) }))}\r\n              />\r\n              <TextField\r\n                label=\"Notizen\"\r\n                multiline\r\n                rows={3}\r\n                fullWidth\r\n                value={editItemData.notes}\r\n                onChange={(e) => setEditItemData(prev => ({ ...prev, notes: e.target.value }))}\r\n              />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setEditItemDialogOpen(false)}>\r\n            Abbrechen\r\n          </Button>\r\n          <Button onClick={saveItem} variant=\"contained\">\r\n            Speichern\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Box,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  ContentCopy as CopyIcon,\r\n  Visibility as ViewIcon,\r\n  LocalOffer as VoucherIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Warning as WarningIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface Voucher {\r\n  id: string;\r\n  name: string;\r\n  code: string;\r\n  type: 'prozent' | 'betrag' | 'versandkosten';\r\n  nominal: number;\r\n  kuota: number;\r\n  used_count: number;\r\n  start_date: string;\r\n  expired: string;\r\n  minimal_buying: number;\r\n  is_active: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface VoucherUsage {\r\n  id: string;\r\n  voucher_id: string;\r\n  transaction_id: string;\r\n  customer_id?: string;\r\n  used_amount: number;\r\n  used_at: string;\r\n}\r\n\r\ninterface VoucherManagementProps {\r\n  className?: string;\r\n}\r\n\r\nexport const VoucherManagement: React.FC<VoucherManagementProps> = ({\r\n  className = ''\r\n}) => {\r\n  const [vouchers, setVouchers] = useState<Voucher[]>([]);\r\n  const [selectedVoucher, setSelectedVoucher] = useState<Voucher | null>(null);\r\n  const [voucherUsage, setVoucherUsage] = useState<VoucherUsage[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  \r\n  // Dialog States\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [usageDialogOpen, setUsageDialogOpen] = useState(false);\r\n  \r\n  // Form States\r\n  const [voucherForm, setVoucherForm] = useState({\r\n    name: '',\r\n    code: '',\r\n    type: 'betrag' as 'prozent' | 'betrag' | 'versandkosten',\r\n    nominal: 0,\r\n    kuota: 1,\r\n    start_date: new Date().toISOString().split('T')[0],\r\n    expired: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    minimal_buying: 0,\r\n    is_active: true\r\n  });\r\n\r\n  // Vouchers laden\r\n  const loadVouchers = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/vouchers');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setVouchers(data.vouchers || []);\r\n      } else {\r\n        throw new Error('Fehler beim Laden der Gutscheine');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Voucher erstellen\r\n  const createVoucher = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/api/vouchers', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(voucherForm)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSuccess('Gutschein erfolgreich erstellt');\r\n        setCreateDialogOpen(false);\r\n        resetVoucherForm();\r\n        loadVouchers();\r\n      } else {\r\n        throw new Error('Fehler beim Erstellen des Gutscheins');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [voucherForm, loadVouchers]);\r\n\r\n  // Voucher bearbeiten\r\n  const updateVoucher = useCallback(async () => {\r\n    if (!selectedVoucher) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/vouchers/${selectedVoucher.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(voucherForm)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setSuccess('Gutschein erfolgreich aktualisiert');\r\n        setEditDialogOpen(false);\r\n        setSelectedVoucher(null);\r\n        resetVoucherForm();\r\n        loadVouchers();\r\n      } else {\r\n        throw new Error('Fehler beim Aktualisieren des Gutscheins');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [selectedVoucher, voucherForm, loadVouchers]);\r\n\r\n  // Voucher löschen\r\n  const deleteVoucher = useCallback(async (voucherId: string) => {\r\n    if (!confirm('Sind Sie sicher, dass Sie diesen Gutschein löschen möchten?')) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/vouchers/${voucherId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setSuccess('Gutschein erfolgreich gelöscht');\r\n        loadVouchers();\r\n      } else {\r\n        throw new Error('Fehler beim Löschen des Gutscheins');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, [loadVouchers]);\r\n\r\n  // Voucher-Nutzung laden\r\n  const loadVoucherUsage = useCallback(async (voucherId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/vouchers/${voucherId}/usage`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setVoucherUsage(data.usage || []);\r\n      } else {\r\n        throw new Error('Fehler beim Laden der Gutschein-Nutzung');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Unbekannter Fehler');\r\n    }\r\n  }, []);\r\n\r\n  // Voucher bearbeiten öffnen\r\n  const openEditDialog = useCallback((voucher: Voucher) => {\r\n    setSelectedVoucher(voucher);\r\n    setVoucherForm({\r\n      name: voucher.name,\r\n      code: voucher.code,\r\n      type: voucher.type,\r\n      nominal: voucher.nominal,\r\n      kuota: voucher.kuota,\r\n      start_date: voucher.start_date,\r\n      expired: voucher.expired,\r\n      minimal_buying: voucher.minimal_buying,\r\n      is_active: voucher.is_active\r\n    });\r\n    setEditDialogOpen(true);\r\n  }, []);\r\n\r\n  // Voucher-Nutzung anzeigen\r\n  const showVoucherUsage = useCallback((voucher: Voucher) => {\r\n    setSelectedVoucher(voucher);\r\n    loadVoucherUsage(voucher.id);\r\n    setUsageDialogOpen(true);\r\n  }, [loadVoucherUsage]);\r\n\r\n  // Code kopieren\r\n  const copyVoucherCode = useCallback((code: string) => {\r\n    navigator.clipboard.writeText(code);\r\n    setSuccess('Gutschein-Code kopiert');\r\n  }, []);\r\n\r\n  // Form zurücksetzen\r\n  const resetVoucherForm = useCallback(() => {\r\n    setVoucherForm({\r\n      name: '',\r\n      code: '',\r\n      type: 'betrag',\r\n      nominal: 0,\r\n      kuota: 1,\r\n      start_date: new Date().toISOString().split('T')[0],\r\n      expired: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n      minimal_buying: 0,\r\n      is_active: true\r\n    });\r\n  }, []);\r\n\r\n  // Automatischen Code generieren\r\n  const generateCode = useCallback(() => {\r\n    const code = 'VALE' + Math.random().toString(36).substr(2, 8).toUpperCase();\r\n    setVoucherForm(prev => ({ ...prev, code }));\r\n  }, []);\r\n\r\n  // Status-Farbe\r\n  const getStatusColor = (voucher: Voucher) => {\r\n    if (!voucher.is_active) return 'error';\r\n    if (voucher.used_count >= voucher.kuota) return 'warning';\r\n    if (new Date(voucher.expired) < new Date()) return 'error';\r\n    return 'success';\r\n  };\r\n\r\n  // Status-Text\r\n  const getStatusText = (voucher: Voucher) => {\r\n    if (!voucher.is_active) return 'Inaktiv';\r\n    if (voucher.used_count >= voucher.kuota) return 'Aufgebraucht';\r\n    if (new Date(voucher.expired) < new Date()) return 'Abgelaufen';\r\n    return 'Aktiv';\r\n  };\r\n\r\n  // Typ-Text\r\n  const getTypeText = (type: string) => {\r\n    switch (type) {\r\n      case 'prozent': return 'Prozent';\r\n      case 'betrag': return 'Betrag';\r\n      case 'versandkosten': return 'Versandkosten';\r\n      default: return type;\r\n    }\r\n  };\r\n\r\n  // Verwendungsrate berechnen\r\n  const getUsageRate = (voucher: Voucher) => {\r\n    return voucher.kuota > 0 ? (voucher.used_count / voucher.kuota) * 100 : 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadVouchers();\r\n  }, [loadVouchers]);\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Header */}\r\n      <Box className=\"flex items-center justify-between\">\r\n        <Typography variant=\"h4\" className=\"flex items-center gap-2\">\r\n          <VoucherIcon />\r\n          Gutschein-Verwaltung\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => setCreateDialogOpen(true)}\r\n        >\r\n          Neuer Gutschein\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Alerts */}\r\n      {error && (\r\n        <Alert severity=\"error\" onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" onClose={() => setSuccess(null)}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Voucher-Liste */}\r\n      <Card className=\"p-4\">\r\n        <Typography variant=\"h6\" className=\"mb-4\">\r\n          Gutscheine\r\n        </Typography>\r\n        \r\n        {loading ? (\r\n          <Box className=\"flex justify-center p-8\">\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Code</TableCell>\r\n                  <TableCell>Typ</TableCell>\r\n                  <TableCell align=\"right\">Wert</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell>Verwendung</TableCell>\r\n                  <TableCell>Gültig bis</TableCell>\r\n                  <TableCell>Aktionen</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {vouchers.map((voucher) => (\r\n                  <TableRow key={voucher.id} hover>\r\n                    <TableCell>{voucher.name}</TableCell>\r\n                    <TableCell>\r\n                      <Box className=\"flex items-center gap-2\">\r\n                        <code className=\"bg-gray-100 px-2 py-1 rounded text-sm\">\r\n                          {voucher.code}\r\n                        </code>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => copyVoucherCode(voucher.code)}\r\n                        >\r\n                          <CopyIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={getTypeText(voucher.type)}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {voucher.type === 'prozent' ? `${voucher.nominal}%` : `€${voucher.nominal.toFixed(2)}`}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={getStatusText(voucher)}\r\n                        color={getStatusColor(voucher)}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box className=\"flex items-center gap-2\">\r\n                        <Box className=\"w-16 bg-gray-200 rounded-full h-2\">\r\n                          <Box\r\n                            className=\"bg-blue-600 h-2 rounded-full\"\r\n                            style={{ width: `${getUsageRate(voucher)}%` }}\r\n                          />\r\n                        </Box>\r\n                        <Typography variant=\"body2\">\r\n                          {voucher.used_count}/{voucher.kuota}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {new Date(voucher.expired).toLocaleDateString('de-DE')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box className=\"flex gap-1\">\r\n                        <Tooltip title=\"Bearbeiten\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => openEditDialog(voucher)}\r\n                          >\r\n                            <EditIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Nutzung anzeigen\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => showVoucherUsage(voucher)}\r\n                          >\r\n                            <ViewIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Löschen\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => deleteVoucher(voucher.id)}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Neuer Gutschein Dialog */}\r\n      <Dialog open={createDialogOpen} onClose={() => setCreateDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Neuen Gutschein erstellen</DialogTitle>\r\n        <DialogContent>\r\n          <Box className=\"space-y-4 pt-2\">\r\n            <TextField\r\n              label=\"Name\"\r\n              fullWidth\r\n              value={voucherForm.name}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, name: e.target.value }))}\r\n            />\r\n            \r\n            <Box className=\"flex gap-2\">\r\n              <TextField\r\n                label=\"Code\"\r\n                fullWidth\r\n                value={voucherForm.code}\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, code: e.target.value }))}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={generateCode}\r\n                sx={{ minWidth: '120px' }}\r\n              >\r\n                Generieren\r\n              </Button>\r\n            </Box>\r\n\r\n            <FormControl fullWidth>\r\n              <InputLabel>Typ</InputLabel>\r\n              <Select\r\n                value={voucherForm.type}\r\n                label=\"Typ\"\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, type: e.target.value as any }))}\r\n              >\r\n                <MenuItem value=\"betrag\">Betrag (€)</MenuItem>\r\n                <MenuItem value=\"prozent\">Prozent (%)</MenuItem>\r\n                <MenuItem value=\"versandkosten\">Versandkosten</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              label={voucherForm.type === 'prozent' ? 'Prozentsatz' : 'Betrag'}\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.nominal}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, nominal: Number(e.target.value) }))}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Verwendungslimit\"\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.kuota}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, kuota: Number(e.target.value) }))}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Mindestbestellwert\"\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.minimal_buying}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, minimal_buying: Number(e.target.value) }))}\r\n            />\r\n\r\n            <Box className=\"flex gap-4\">\r\n              <TextField\r\n                label=\"Gültig ab\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={voucherForm.start_date}\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, start_date: e.target.value }))}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n              <TextField\r\n                label=\"Gültig bis\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={voucherForm.expired}\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, expired: e.target.value }))}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Box>\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={voucherForm.is_active}\r\n                  onChange={(e) => setVoucherForm(prev => ({ ...prev, is_active: e.target.checked }))}\r\n                />\r\n              }\r\n              label=\"Aktiv\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setCreateDialogOpen(false)}>\r\n            Abbrechen\r\n          </Button>\r\n          <Button onClick={createVoucher} variant=\"contained\">\r\n            Erstellen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Gutschein bearbeiten Dialog */}\r\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Gutschein bearbeiten</DialogTitle>\r\n        <DialogContent>\r\n          <Box className=\"space-y-4 pt-2\">\r\n            <TextField\r\n              label=\"Name\"\r\n              fullWidth\r\n              value={voucherForm.name}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, name: e.target.value }))}\r\n            />\r\n            \r\n            <TextField\r\n              label=\"Code\"\r\n              fullWidth\r\n              value={voucherForm.code}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, code: e.target.value }))}\r\n            />\r\n\r\n            <FormControl fullWidth>\r\n              <InputLabel>Typ</InputLabel>\r\n              <Select\r\n                value={voucherForm.type}\r\n                label=\"Typ\"\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, type: e.target.value as any }))}\r\n              >\r\n                <MenuItem value=\"betrag\">Betrag (€)</MenuItem>\r\n                <MenuItem value=\"prozent\">Prozent (%)</MenuItem>\r\n                <MenuItem value=\"versandkosten\">Versandkosten</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              label={voucherForm.type === 'prozent' ? 'Prozentsatz' : 'Betrag'}\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.nominal}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, nominal: Number(e.target.value) }))}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Verwendungslimit\"\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.kuota}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, kuota: Number(e.target.value) }))}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Mindestbestellwert\"\r\n              type=\"number\"\r\n              fullWidth\r\n              value={voucherForm.minimal_buying}\r\n              onChange={(e) => setVoucherForm(prev => ({ ...prev, minimal_buying: Number(e.target.value) }))}\r\n            />\r\n\r\n            <Box className=\"flex gap-4\">\r\n              <TextField\r\n                label=\"Gültig ab\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={voucherForm.start_date}\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, start_date: e.target.value }))}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n              <TextField\r\n                label=\"Gültig bis\"\r\n                type=\"date\"\r\n                fullWidth\r\n                value={voucherForm.expired}\r\n                onChange={(e) => setVoucherForm(prev => ({ ...prev, expired: e.target.value }))}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Box>\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={voucherForm.is_active}\r\n                  onChange={(e) => setVoucherForm(prev => ({ ...prev, is_active: e.target.checked }))}\r\n                />\r\n              }\r\n              label=\"Aktiv\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setEditDialogOpen(false)}>\r\n            Abbrechen\r\n          </Button>\r\n          <Button onClick={updateVoucher} variant=\"contained\">\r\n            Speichern\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Gutschein-Nutzung Dialog */}\r\n      <Dialog open={usageDialogOpen} onClose={() => setUsageDialogOpen(false)} maxWidth=\"lg\" fullWidth>\r\n        <DialogTitle>\r\n          Gutschein-Nutzung: {selectedVoucher?.name}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Datum</TableCell>\r\n                  <TableCell>Transaktion</TableCell>\r\n                  <TableCell>Kunde</TableCell>\r\n                  <TableCell align=\"right\">Verwendeter Betrag</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {voucherUsage.map((usage) => (\r\n                  <TableRow key={usage.id}>\r\n                    <TableCell>\r\n                      {new Date(usage.used_at).toLocaleDateString('de-DE')}\r\n                    </TableCell>\r\n                    <TableCell>{usage.transaction_id}</TableCell>\r\n                    <TableCell>{usage.customer_id || 'Anonym'}</TableCell>\r\n                    <TableCell align=\"right\">€{usage.used_amount.toFixed(2)}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setUsageDialogOpen(false)}>\r\n            Schließen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}; "],"file":"js/components-Dj2tQkqX.js"}