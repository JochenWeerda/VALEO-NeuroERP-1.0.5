{"version":3,"file":"auth-Bv6CYr1e.js","sources":["../../src/contexts/AuthContext.tsx","../../src/components/auth/LoginForm.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { authService, User, LoginRequest } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (credentials: LoginRequest) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth muss innerhalb eines AuthProviders verwendet werden');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        if (authService.isAuthenticated()) {\r\n          const currentUser = await authService.getCurrentUser();\r\n          setUser(currentUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        await authService.logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginRequest) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      setUser({ ...response.user, disabled: false });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await authService.logout();\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Alert,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      await login({ username, password });\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Login fehlgeschlagen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'background.default',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Card sx={{ maxWidth: 400, width: '100%' }}>\r\n        <CardContent sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n            VALEO NeuroERP\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mb: 3 }}>\r\n            Anmelden\r\n          </Typography>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {error && (\r\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                {error}\r\n              </Alert>\r\n            )}\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Benutzername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Passwort\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              disabled={loading || !username || !password}\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : 'Anmelden'}\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm; "],"names":["createContext","useContext","useState","useEffect","jsx","jsxs"],"mappings":"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"}