{"version":3,"file":"pos-system-D3uS3wb4.js","sources":["../../src/pages/POS/POSPage.tsx","../../src/pages/POS/DailyReportPage.tsx","../../src/pages/POS/LakasirFeatures.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel\r\n} from '@mui/material';\r\nimport {\r\n  ShoppingCart as CartIcon,\r\n  Add as AddIcon,\r\n  Remove as RemoveIcon,\r\n  Clear as ClearIcon,\r\n  Receipt as ReceiptIcon,\r\n  Payment as PaymentIcon,\r\n  Search as SearchIcon,\r\n  Category as CategoryIcon,\r\n  Euro as EuroIcon,\r\n  LocalOffer as DiscountIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface Product {\r\n  artikel_nr: string;\r\n  bezeichnung: string;\r\n  kurztext: string;\r\n  verkaufspreis_netto: number;\r\n  verkaufspreis_brutto: number;\r\n  mwst_satz: number;\r\n  einheit: string;\r\n  lagerbestand: number;\r\n  ean_code?: string;\r\n  kategorie?: string;\r\n  bild_url?: string;\r\n  aktiv: boolean;\r\n}\r\n\r\ninterface CartItem {\r\n  artikel_nr: string;\r\n  bezeichnung: string;\r\n  menge: number;\r\n  einzelpreis_netto: number;\r\n  einzelpreis_brutto: number;\r\n  gesamtpreis_netto: number;\r\n  gesamtpreis_brutto: number;\r\n  mwst_satz: number;\r\n  mwst_betrag: number;\r\n  einheit: string;\r\n  ean_code?: string;\r\n}\r\n\r\ninterface PaymentMethod {\r\n  value: string;\r\n  label: string;\r\n  description: string;\r\n}\r\n\r\nconst POSPage: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [paymentDialogOpen, setPaymentDialogOpen] = useState(false);\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<string>('bar');\r\n  const [paymentMethods, setPaymentMethods] = useState<PaymentMethod[]>([]);\r\n  const [discountDialogOpen, setDiscountDialogOpen] = useState(false);\r\n  const [discountPercent, setDiscountPercent] = useState<number>(0);\r\n\r\n  // Lade Produkte beim Start\r\n  useEffect(() => {\r\n    loadProducts();\r\n    loadPaymentMethods();\r\n  }, []);\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/pos/products');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setProducts(data);\r\n      } else {\r\n        setError('Fehler beim Laden der Produkte');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadPaymentMethods = async () => {\r\n    try {\r\n      const response = await fetch('/api/pos/payment-methods');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPaymentMethods(data.payment_methods);\r\n      }\r\n    } catch (err) {\r\n      console.error('Fehler beim Laden der Zahlungsarten:', err);\r\n    }\r\n  };\r\n\r\n  const addToCart = async (product: Product, quantity: number = 1) => {\r\n    try {\r\n      const response = await fetch('/api/pos/cart/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          artikel_nr: product.artikel_nr,\r\n          menge: quantity\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Warenkorb aktualisieren\r\n        loadCart();\r\n      } else {\r\n        setError('Fehler beim HinzufÃ¼gen zum Warenkorb');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (artikelNr: string, quantity?: number) => {\r\n    try {\r\n      const response = await fetch('/api/pos/cart/remove', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          artikel_nr: artikelNr,\r\n          menge: quantity\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        loadCart();\r\n      } else {\r\n        setError('Fehler beim Entfernen aus dem Warenkorb');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    }\r\n  };\r\n\r\n  const loadCart = async () => {\r\n    try {\r\n      const response = await fetch('/api/pos/cart');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCart(data.items);\r\n      }\r\n    } catch (err) {\r\n      console.error('Fehler beim Laden des Warenkorbs:', err);\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      const response = await fetch('/api/pos/cart/clear', {\r\n        method: 'POST'\r\n      });\r\n\r\n      if (response.ok) {\r\n        setCart([]);\r\n      } else {\r\n        setError('Fehler beim Leeren des Warenkorbs');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    }\r\n  };\r\n\r\n  const applyDiscount = async () => {\r\n    try {\r\n      const response = await fetch('/api/pos/cart/discount', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          rabatt_prozent: discountPercent\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        loadCart();\r\n        setDiscountDialogOpen(false);\r\n        setDiscountPercent(0);\r\n      } else {\r\n        setError('Fehler beim Anwenden des Rabatts');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    }\r\n  };\r\n\r\n  const createSale = async () => {\r\n    try {\r\n      const response = await fetch('/api/pos/sale/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          zahlungsart: selectedPaymentMethod\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPaymentDialogOpen(false);\r\n        setCart([]);\r\n        // Erfolgsmeldung anzeigen\r\n        alert('Verkauf erfolgreich abgeschlossen!');\r\n      } else {\r\n        setError('Fehler beim Erstellen der Verkaufstransaktion');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    }\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    const netto = cart.reduce((sum, item) => sum + item.gesamtpreis_netto, 0);\r\n    const brutto = cart.reduce((sum, item) => sum + item.gesamtpreis_brutto, 0);\r\n    const mwst = cart.reduce((sum, item) => sum + item.mwst_betrag, 0);\r\n    \r\n    return { netto, brutto, mwst, anzahl: cart.length };\r\n  };\r\n\r\n  const filteredProducts = products.filter(product => {\r\n    const matchesSearch = product.bezeichnung.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         product.artikel_nr.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCategory = !selectedCategory || product.kategorie === selectedCategory;\r\n    return matchesSearch && matchesCategory && product.aktiv;\r\n  });\r\n\r\n  const categories = [...new Set(products.map(p => p.kategorie).filter(Boolean))];\r\n\r\n  return (\r\n    <Box sx={{ p: 3, height: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        VALEO NeuroERP - Kassensystem\r\n      </Typography>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid container spacing={3} sx={{ flex: 1, minHeight: 0 }}>\r\n        {/* Linke Seite - Produkte */}\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <CardContent sx={{ flex: 1, overflow: 'hidden', display: 'flex', flexDirection: 'column' }}>\r\n              {/* Suchleiste und Filter */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      placeholder=\"Artikel suchen...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      InputProps={{\r\n                        startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel>Kategorie</InputLabel>\r\n                      <Select\r\n                        value={selectedCategory}\r\n                        onChange={(e) => setSelectedCategory(e.target.value)}\r\n                        label=\"Kategorie\"\r\n                      >\r\n                        <MenuItem value=\"\">Alle Kategorien</MenuItem>\r\n                        {categories.map(category => (\r\n                          <MenuItem key={category} value={category}>\r\n                            {category}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              {/* Produktgrid */}\r\n              <Box sx={{ flex: 1, overflow: 'auto' }}>\r\n                {loading ? (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                ) : (\r\n                  <Grid container spacing={2}>\r\n                    {filteredProducts.map((product) => (\r\n                      <Grid item xs={6} sm={4} md={3} key={product.artikel_nr}>\r\n                        <Card \r\n                          sx={{ \r\n                            cursor: 'pointer',\r\n                            '&:hover': { boxShadow: 3 },\r\n                            height: '100%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                          }}\r\n                          onClick={() => addToCart(product)}\r\n                        >\r\n                          <CardContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                              {product.bezeichnung}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                              {product.kurztext}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"primary\" sx={{ mt: 'auto' }}>\r\n                              {product.verkaufspreis_brutto.toFixed(2)}â¬\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                              {product.artikel_nr} â¢ {product.einheit}\r\n                            </Typography>\r\n                            {product.lagerbestand <= 0 && (\r\n                              <Chip \r\n                                label=\"Nicht verfÃ¼gbar\" \r\n                                color=\"error\" \r\n                                size=\"small\" \r\n                                sx={{ mt: 1 }}\r\n                              />\r\n                            )}\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Rechte Seite - Warenkorb */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <CardContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <CartIcon sx={{ mr: 1 }} />\r\n                <Typography variant=\"h6\">Warenkorb</Typography>\r\n                <Box sx={{ ml: 'auto' }}>\r\n                  <IconButton onClick={clearCart} size=\"small\">\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Divider sx={{ mb: 2 }} />\r\n\r\n              {/* Warenkorb-Artikel */}\r\n              <Box sx={{ flex: 1, overflow: 'auto', mb: 2 }}>\r\n                {cart.length === 0 ? (\r\n                  <Typography color=\"text.secondary\" align=\"center\">\r\n                    Warenkorb ist leer\r\n                  </Typography>\r\n                ) : (\r\n                  cart.map((item) => (\r\n                    <Card key={item.artikel_nr} sx={{ mb: 1 }}>\r\n                      <CardContent sx={{ py: 1 }}>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                          <Box sx={{ flex: 1 }}>\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {item.bezeichnung}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                              {item.menge} {item.einheit} x {item.einzelpreis_brutto.toFixed(2)}â¬\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Typography variant=\"subtitle2\" sx={{ mr: 1 }}>\r\n                              {item.gesamtpreis_brutto.toFixed(2)}â¬\r\n                            </Typography>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => removeFromCart(item.artikel_nr)}\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))\r\n                )}\r\n              </Box>\r\n\r\n              <Divider sx={{ mb: 2 }} />\r\n\r\n              {/* Gesamtsumme */}\r\n              <Box sx={{ mb: 2 }}>\r\n                {(() => {\r\n                  const total = getCartTotal();\r\n                  return (\r\n                    <>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                        <Typography>Zwischensumme:</Typography>\r\n                        <Typography>{total.netto.toFixed(2)}â¬</Typography>\r\n                      </Box>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                        <Typography>MwSt.:</Typography>\r\n                        <Typography>{total.mwst.toFixed(2)}â¬</Typography>\r\n                      </Box>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                        <Typography variant=\"h6\">Gesamt:</Typography>\r\n                        <Typography variant=\"h6\">{total.brutto.toFixed(2)}â¬</Typography>\r\n                      </Box>\r\n                    </>\r\n                  );\r\n                })()}\r\n              </Box>\r\n\r\n              {/* Aktions-Buttons */}\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<DiscountIcon />}\r\n                  onClick={() => setDiscountDialogOpen(true)}\r\n                  disabled={cart.length === 0}\r\n                  fullWidth\r\n                >\r\n                  Rabatt\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<PaymentIcon />}\r\n                  onClick={() => setPaymentDialogOpen(true)}\r\n                  disabled={cart.length === 0}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                >\r\n                  Bezahlen ({getCartTotal().brutto.toFixed(2)}â¬)\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Zahlungsdialog */}\r\n      <Dialog open={paymentDialogOpen} onClose={() => setPaymentDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Zahlung abschlieÃen</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Gesamtbetrag: {getCartTotal().brutto.toFixed(2)}â¬\r\n            </Typography>\r\n          </Box>\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>Zahlungsart</InputLabel>\r\n            <Select\r\n              value={selectedPaymentMethod}\r\n              onChange={(e) => setSelectedPaymentMethod(e.target.value)}\r\n              label=\"Zahlungsart\"\r\n            >\r\n              {paymentMethods.map(method => (\r\n                <MenuItem key={method.value} value={method.value}>\r\n                  {method.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setPaymentDialogOpen(false)}>Abbrechen</Button>\r\n          <Button onClick={createSale} variant=\"contained\">\r\n            Verkauf abschlieÃen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Rabattdialog */}\r\n      <Dialog open={discountDialogOpen} onClose={() => setDiscountDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Rabatt anwenden</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Rabatt in Prozent\"\r\n            type=\"number\"\r\n            value={discountPercent}\r\n            onChange={(e) => setDiscountPercent(Number(e.target.value))}\r\n            inputProps={{ min: 0, max: 100, step: 0.1 }}\r\n            sx={{ mt: 1 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDiscountDialogOpen(false)}>Abbrechen</Button>\r\n          <Button onClick={applyDiscount} variant=\"contained\">\r\n            Rabatt anwenden\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default POSPage; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport {\r\n  Receipt as ReceiptIcon,\r\n  Euro as EuroIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Payment as PaymentIcon,\r\n  Download as DownloadIcon,\r\n  Print as PrintIcon,\r\n  Assessment as AssessmentIcon,\r\n  CheckCircle as CheckCircleIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface DailyReport {\r\n  datum: string;\r\n  kasse_id: string;\r\n  kassierer_id: string;\r\n  anzahl_belege: number;\r\n  gesamt_umsatz_netto: number;\r\n  gesamt_umsatz_brutto: number;\r\n  mwst_gesamt: number;\r\n  zahlungsarten_aufschlÃ¼sselung: Record<string, number>;\r\n  kassenbestand_anfang: number;\r\n  kassenbestand_ende: number;\r\n  differenz: number;\r\n  tse_signaturen: string[];\r\n  status: string;\r\n}\r\n\r\ninterface Sale {\r\n  beleg_nr: string;\r\n  kunde_id: string;\r\n  kunde_name: string;\r\n  verkaufsdatum: string;\r\n  gesamt_netto: number;\r\n  gesamt_brutto: number;\r\n  mwst_gesamt: number;\r\n  zahlungsart: string;\r\n  status: string;\r\n  anzahl_artikel: number;\r\n}\r\n\r\nconst DailyReportPage: React.FC = () => {\r\n  const [dailyReport, setDailyReport] = useState<DailyReport | null>(null);\r\n  const [sales, setSales] = useState<Sale[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [createReportDialogOpen, setCreateReportDialogOpen] = useState(false);\r\n  const [exportFibuDialogOpen, setExportFibuDialogOpen] = useState(false);\r\n  const [kasseId, setKasseId] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n  useEffect(() => {\r\n    loadSales();\r\n  }, []);\r\n\r\n  const loadSales = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/pos/sales');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSales(data.sales);\r\n      } else {\r\n        setError('Fehler beim Laden der VerkÃ¤ufe');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createDailyReport = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/pos/daily-report/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          kasse_id: kasseId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDailyReport(data.daily_report);\r\n        setCreateReportDialogOpen(false);\r\n        setKasseId('');\r\n      } else {\r\n        setError('Fehler beim Erstellen des Tagesjournals');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportToFibu = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/pos/daily-report/export-fibu', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          datum: selectedDate\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        setExportFibuDialogOpen(false);\r\n        alert('Tagesjournal erfolgreich in FIBU exportiert!');\r\n      } else {\r\n        setError('Fehler beim FIBU-Export');\r\n      }\r\n    } catch (err) {\r\n      setError('Verbindungsfehler');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('de-DE', {\r\n      style: 'currency',\r\n      currency: 'EUR'\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('de-DE');\r\n  };\r\n\r\n  const getPaymentMethodColor = (method: string) => {\r\n    const colors: Record<string, 'primary' | 'secondary' | 'success' | 'warning' | 'error'> = {\r\n      'bar': 'success',\r\n      'ec_karte': 'primary',\r\n      'kreditkarte': 'secondary',\r\n      'paypal': 'warning',\r\n      'klarna': 'error'\r\n    };\r\n    return colors[method] || 'default';\r\n  };\r\n\r\n  const getPaymentMethodLabel = (method: string) => {\r\n    const labels: Record<string, string> = {\r\n      'bar': 'Bar',\r\n      'ec_karte': 'EC-Karte',\r\n      'kreditkarte': 'Kreditkarte',\r\n      'paypal': 'PayPal',\r\n      'klarna': 'Klarna',\r\n      'ueberweisung': 'Ãberweisung',\r\n      'rechnung': 'Rechnung'\r\n    };\r\n    return labels[method] || method;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\">\r\n          Tagesjournal - Kassensystem\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AssessmentIcon />}\r\n            onClick={() => setCreateReportDialogOpen(true)}\r\n          >\r\n            Tagesjournal erstellen\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<DownloadIcon />}\r\n            onClick={() => setExportFibuDialogOpen(true)}\r\n            disabled={!dailyReport}\r\n          >\r\n            FIBU Export\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Tagesjournal Ãbersicht */}\r\n        {dailyReport && (\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Tagesjournal vom {formatDate(dailyReport.datum)}\r\n                </Typography>\r\n                \r\n                <Grid container spacing={3} sx={{ mt: 2 }}>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\r\n                      <ReceiptIcon sx={{ fontSize: 40, color: 'white', mb: 1 }} />\r\n                      <Typography variant=\"h4\" color=\"white\">\r\n                        {dailyReport.anzahl_belege}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"white\">\r\n                        Belege\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'success.light', borderRadius: 1 }}>\r\n                      <EuroIcon sx={{ fontSize: 40, color: 'white', mb: 1 }} />\r\n                      <Typography variant=\"h4\" color=\"white\">\r\n                        {formatCurrency(dailyReport.gesamt_umsatz_brutto)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"white\">\r\n                        Umsatz (Brutto)\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'info.light', borderRadius: 1 }}>\r\n                      <TrendingUpIcon sx={{ fontSize: 40, color: 'white', mb: 1 }} />\r\n                      <Typography variant=\"h4\" color=\"white\">\r\n                        {formatCurrency(dailyReport.gesamt_umsatz_netto)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"white\">\r\n                        Umsatz (Netto)\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ textAlign: 'center', p: 2, bgcolor: 'warning.light', borderRadius: 1 }}>\r\n                      <PaymentIcon sx={{ fontSize: 40, color: 'white', mb: 1 }} />\r\n                      <Typography variant=\"h4\" color=\"white\">\r\n                        {formatCurrency(dailyReport.mwst_gesamt)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"white\">\r\n                        Umsatzsteuer\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider sx={{ my: 3 }} />\r\n\r\n                {/* Zahlungsarten AufschlÃ¼sselung */}\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Zahlungsarten\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  {Object.entries(dailyReport.zahlungsarten_aufschlÃ¼sselung).map(([method, amount]) => (\r\n                    <Grid item xs={6} md={3} key={method}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent sx={{ textAlign: 'center' }}>\r\n                          <Chip \r\n                            label={getPaymentMethodLabel(method)}\r\n                            color={getPaymentMethodColor(method)}\r\n                            sx={{ mb: 1 }}\r\n                          />\r\n                          <Typography variant=\"h6\">\r\n                            {formatCurrency(amount)}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                <Divider sx={{ my: 3 }} />\r\n\r\n                {/* Kassenbestand */}\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Kassenbestand\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={4}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Kassenbestand Anfang\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                          {formatCurrency(dailyReport.kassenbestand_anfang)}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Kassenbestand Ende\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                          {formatCurrency(dailyReport.kassenbestand_ende)}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    <Card variant=\"outlined\">\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Differenz\r\n                        </Typography>\r\n                        <Typography \r\n                          variant=\"h6\" \r\n                          color={dailyReport.differenz >= 0 ? 'success.main' : 'error.main'}\r\n                        >\r\n                          {formatCurrency(dailyReport.differenz)}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {/* TSE-Signaturen */}\r\n                {dailyReport.tse_signaturen.length > 0 && (\r\n                  <>\r\n                    <Divider sx={{ my: 3 }} />\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      TSE-Signaturen ({dailyReport.tse_signaturen.length})\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {dailyReport.tse_signaturen.map((signature, index) => (\r\n                        <Chip \r\n                          key={index}\r\n                          label={`TSE-${index + 1}`}\r\n                          variant=\"outlined\"\r\n                          icon={<CheckCircleIcon />}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        )}\r\n\r\n        {/* VerkÃ¤ufe Tabelle */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                VerkÃ¤ufe des Tages\r\n              </Typography>\r\n              \r\n              {loading ? (\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n                  <CircularProgress />\r\n                </Box>\r\n              ) : (\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Beleg-Nr</TableCell>\r\n                        <TableCell>Datum</TableCell>\r\n                        <TableCell>Kunde</TableCell>\r\n                        <TableCell>Artikel</TableCell>\r\n                        <TableCell align=\"right\">Netto</TableCell>\r\n                        <TableCell align=\"right\">MwSt.</TableCell>\r\n                        <TableCell align=\"right\">Brutto</TableCell>\r\n                        <TableCell>Zahlungsart</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {sales.map((sale) => (\r\n                        <TableRow key={sale.beleg_nr}>\r\n                          <TableCell>{sale.beleg_nr}</TableCell>\r\n                          <TableCell>{formatDate(sale.verkaufsdatum)}</TableCell>\r\n                          <TableCell>{sale.kunde_name}</TableCell>\r\n                          <TableCell>{sale.anzahl_artikel}</TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(sale.gesamt_netto)}</TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(sale.mwst_gesamt)}</TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(sale.gesamt_brutto)}</TableCell>\r\n                          <TableCell>\r\n                            <Chip \r\n                              label={getPaymentMethodLabel(sale.zahlungsart)}\r\n                              color={getPaymentMethodColor(sale.zahlungsart)}\r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Chip \r\n                              label={sale.status}\r\n                              color={sale.status === 'abgeschlossen' ? 'success' : 'warning'}\r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Tagesjournal erstellen Dialog */}\r\n      <Dialog open={createReportDialogOpen} onClose={() => setCreateReportDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Tagesjournal erstellen</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Kasse ID\"\r\n            value={kasseId}\r\n            onChange={(e) => setKasseId(e.target.value)}\r\n            sx={{ mt: 1 }}\r\n            placeholder=\"z.B. KASSE001\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setCreateReportDialogOpen(false)}>Abbrechen</Button>\r\n          <Button onClick={createDailyReport} variant=\"contained\" disabled={!kasseId}>\r\n            Erstellen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* FIBU Export Dialog */}\r\n      <Dialog open={exportFibuDialogOpen} onClose={() => setExportFibuDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>FIBU Export</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Datum\"\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n            sx={{ mt: 1 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            Das Tagesjournal wird in die Finanzbuchhaltung exportiert und die entsprechenden BuchungssÃ¤tze erstellt.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setExportFibuDialogOpen(false)}>Abbrechen</Button>\r\n          <Button onClick={exportToFibu} variant=\"contained\">\r\n            Exportieren\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DailyReportPage; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Card,\r\n  Container,\r\n  Paper\r\n} from '@mui/material';\r\nimport {\r\n  QrCode as BarcodeIcon,\r\n  Inventory as InventoryIcon,\r\n  LocalOffer as VoucherIcon\r\n} from '@mui/icons-material';\r\nimport { BarcodeScanner } from '../../components/barcode';\r\nimport { StockOpnameInterface } from '../../components/inventory';\r\nimport { VoucherManagement } from '../../components/voucher';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`lakasir-tabpanel-${index}`}\r\n      aria-labelledby={`lakasir-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box className=\"py-4\">\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `lakasir-tab-${index}`,\r\n    'aria-controls': `lakasir-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const LakasirFeatures: React.FC = () => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" className=\"py-6\">\r\n      <Paper className=\"p-6\">\r\n        {/* Header */}\r\n        <Box className=\"mb-6\">\r\n          <Typography variant=\"h4\" className=\"mb-2\">\r\n            Lakasir Features - VALEO NeuroERP\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Erweiterte POS-Funktionen adaptiert von Lakasir\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Tabs */}\r\n        <Box className=\"border-b border-gray-200\">\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"Lakasir Features Tabs\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            <Tab\r\n              label={\r\n                <Box className=\"flex items-center gap-2\">\r\n                  <BarcodeIcon />\r\n                  <span>Barcode-Scanner</span>\r\n                </Box>\r\n              }\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              label={\r\n                <Box className=\"flex items-center gap-2\">\r\n                  <InventoryIcon />\r\n                  <span>Inventur</span>\r\n                </Box>\r\n              }\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              label={\r\n                <Box className=\"flex items-center gap-2\">\r\n                  <VoucherIcon />\r\n                  <span>Gutscheine</span>\r\n                </Box>\r\n              }\r\n              {...a11yProps(2)}\r\n            />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Tab Content */}\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Card className=\"p-4\">\r\n            <Typography variant=\"h6\" className=\"mb-4\">\r\n              Barcode-Scanner Integration\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" className=\"mb-4\">\r\n              Scannen Sie Barcodes direkt Ã¼ber die Webcam oder verbinden Sie einen externen Barcode-Scanner.\r\n            </Typography>\r\n            <BarcodeScanner\r\n              onBarcodeDetected={(barcode) => {\r\n                console.log('Barcode erkannt:', barcode);\r\n                // TODO: Produkt Ã¼ber Barcode suchen und zum Warenkorb hinzufÃ¼gen\r\n              }}\r\n              onError={(error) => {\r\n                console.error('Scanner-Fehler:', error);\r\n              }}\r\n            />\r\n          </Card>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n          <StockOpnameInterface />\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={2}>\r\n          <VoucherManagement />\r\n        </TabPanel>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}; "],"names":["useState","useEffect","jsxs","jsx","Fragment","DiscountIcon","ReceiptIcon","TrendingUpIcon","BarcodeIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,MAAM,UAAoB,MAAM;AAC9B,QAAM,CAAC,UAAU,WAAW,IAAIA,aAAAA,SAAoB,CAAA,CAAE;AACtD,QAAM,CAAC,MAAM,OAAO,IAAIA,aAAAA,SAAqB,CAAA,CAAE;AAC/C,QAAM,CAAC,YAAY,aAAa,IAAIA,aAAAA,SAAS,EAAE;AAC/C,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,aAAAA,SAAiB,EAAE;AACnE,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,aAAAA,SAAwB,IAAI;AACtD,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,aAAAA,SAAS,KAAK;AAChE,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,aAAAA,SAAiB,KAAK;AAChF,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,aAAAA,SAA0B,CAAA,CAAE;AACxE,QAAM,CAAC,oBAAoB,qBAAqB,IAAIA,aAAAA,SAAS,KAAK;AAClE,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,aAAAA,SAAiB,CAAC;AAGhEC,eAAAA,UAAU,MAAM;AACd,iBAAA;AACA,uBAAA;AAAA,EACF,GAAG,CAAA,CAAE;AAEL,QAAM,eAAe,MAAY;AAC/B,QAAI;AACF,iBAAW,IAAI;AACf,YAAM,WAAW,MAAM,MAAM,mBAAmB;AAChD,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,oBAAY,IAAI;AAAA,MAClB,OAAO;AACL,iBAAS,gCAAgC;AAAA,MAC3C;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,qBAAqB,MAAY;AACrC,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,0BAA0B;AACvD,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,0BAAkB,KAAK,eAAe;AAAA,MACxC;AAAA,IACF,SAAS,KAAK;AACZ,cAAQ,MAAM,wCAAwC,GAAG;AAAA,IAC3D;AAAA,EACF;AAEA,QAAM,YAAY,CAAO,SAAkB,WAAmB,MAAM;AAClE,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,qBAAqB;AAAA,QAChD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,YAAY,QAAQ;AAAA,UACpB,OAAO;AAAA,QAAA,CACR;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAE5B,iBAAA;AAAA,MACF,OAAO;AACL,iBAAS,sCAAsC;AAAA,MACjD;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAO,WAAmB,aAAsB;AACrE,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,wBAAwB;AAAA,QACnD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,YAAY;AAAA,UACZ,OAAO;AAAA,QAAA,CACR;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,iBAAA;AAAA,MACF,OAAO;AACL,iBAAS,yCAAyC;AAAA,MACpD;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAEA,QAAM,WAAW,MAAY;AAC3B,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,eAAe;AAC5C,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,gBAAQ,KAAK,KAAK;AAAA,MACpB;AAAA,IACF,SAAS,KAAK;AACZ,cAAQ,MAAM,qCAAqC,GAAG;AAAA,IACxD;AAAA,EACF;AAEA,QAAM,YAAY,MAAY;AAC5B,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,uBAAuB;AAAA,QAClD,QAAQ;AAAA,MAAA,CACT;AAED,UAAI,SAAS,IAAI;AACf,gBAAQ,CAAA,CAAE;AAAA,MACZ,OAAO;AACL,iBAAS,mCAAmC;AAAA,MAC9C;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAEA,QAAM,gBAAgB,MAAY;AAChC,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,0BAA0B;AAAA,QACrD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,gBAAgB;AAAA,QAAA,CACjB;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,iBAAA;AACA,8BAAsB,KAAK;AAC3B,2BAAmB,CAAC;AAAA,MACtB,OAAO;AACL,iBAAS,kCAAkC;AAAA,MAC7C;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAEA,QAAM,aAAa,MAAY;AAC7B,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,wBAAwB;AAAA,QACnD,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,aAAa;AAAA,QAAA,CACd;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,6BAAqB,KAAK;AAC1B,gBAAQ,CAAA,CAAE;AAEV,cAAM,oCAAoC;AAAA,MAC5C,OAAO;AACL,iBAAS,+CAA+C;AAAA,MAC1D;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,UAAM,QAAQ,KAAK,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,mBAAmB,CAAC;AACxE,UAAM,SAAS,KAAK,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,oBAAoB,CAAC;AAC1E,UAAM,OAAO,KAAK,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,aAAa,CAAC;AAEjE,WAAO,EAAE,OAAO,QAAQ,MAAM,QAAQ,KAAK,OAAA;AAAA,EAC7C;AAEA,QAAM,mBAAmB,SAAS,OAAO,CAAA,YAAW;AAClD,UAAM,gBAAgB,QAAQ,YAAY,YAAA,EAAc,SAAS,WAAW,YAAA,CAAa,KACpE,QAAQ,WAAW,YAAA,EAAc,SAAS,WAAW,aAAa;AACvF,UAAM,kBAAkB,CAAC,oBAAoB,QAAQ,cAAc;AACnE,WAAO,iBAAiB,mBAAmB,QAAQ;AAAA,EACrD,CAAC;AAED,QAAM,aAAa,CAAC,GAAG,IAAI,IAAI,SAAS,IAAI,CAAA,MAAK,EAAE,SAAS,EAAE,OAAO,OAAO,CAAC,CAAC;AAE9E,SACEC,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,GAAG,GAAG,QAAQ,SAAS,SAAS,QAAQ,eAAe,SAAA,GAChE,UAAA;AAAA,IAAAC,sCAAC,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA,iCAEtC;AAAA,IAEC,SACCA,kCAAAA,IAAC,OAAA,EAAM,UAAS,SAAQ,IAAI,EAAE,IAAI,EAAA,GAAK,SAAS,MAAM,SAAS,IAAI,GAChE,UAAA,OACH;AAAA,IAGFD,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GAAG,IAAI,EAAE,MAAM,GAAG,WAAW,EAAA,GAEpD,UAAA;AAAA,MAAAC,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,IAAI,EAAE,QAAQ,QAAQ,SAAS,QAAQ,eAAe,SAAA,GAC1D,UAAAD,kCAAAA,KAAC,aAAA,EAAY,IAAI,EAAE,MAAM,GAAG,UAAU,UAAU,SAAS,QAAQ,eAAe,YAE9E,UAAA;AAAA,QAAAC,kCAAAA,IAAC,KAAA,EAAI,IAAI,EAAE,IAAI,EAAA,GACb,UAAAD,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,UAAAC,sCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAS;AAAA,cACT,aAAY;AAAA,cACZ,OAAO;AAAA,cACP,UAAU,CAAC,MAAM,cAAc,EAAE,OAAO,KAAK;AAAA,cAC7C,YAAY;AAAA,gBACV,sDAAiB,YAAA,EAAW,IAAI,EAAE,IAAI,GAAG,OAAO,mBAAiB,CAAG;AAAA,cAAA;AAAA,YACtE;AAAA,UAAA,GAEJ;AAAA,UACAA,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,kCAAAA,KAAC,aAAA,EAAY,WAAS,MACpB,UAAA;AAAA,YAAAC,kCAAAA,IAAC,cAAW,UAAA,YAAA,CAAS;AAAA,YACrBD,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO;AAAA,gBACP,UAAU,CAAC,MAAM,oBAAoB,EAAE,OAAO,KAAK;AAAA,gBACnD,OAAM;AAAA,gBAEN,UAAA;AAAA,kBAAAC,kCAAAA,IAAC,UAAA,EAAS,OAAM,IAAG,UAAA,mBAAe;AAAA,kBACjC,WAAW,IAAI,CAAA,aACdA,kCAAAA,IAAC,YAAwB,OAAO,UAC7B,UAAA,SAAA,GADY,QAEf,CACD;AAAA,gBAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,EAAA,CACF,EAAA,CACF;AAAA,QAAA,EAAA,CACF,EAAA,CACF;AAAA,QAGAA,kCAAAA,IAAC,OAAI,IAAI,EAAE,MAAM,GAAG,UAAU,UAC3B,UAAA,gDACE,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,UAAU,YAAY,UAAU,QAAQ,UAClF,gDAAC,kBAAA,CAAA,CAAiB,GACpB,IAEAA,sCAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACtB,UAAA,iBAAiB,IAAI,CAAC,YACrBA,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAC3B,UAAAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,IAAI;AAAA,cACF,QAAQ;AAAA,cACR,WAAW,EAAE,WAAW,EAAA;AAAA,cACxB,QAAQ;AAAA,cACR,SAAS;AAAA,cACT,eAAe;AAAA,YAAA;AAAA,YAEjB,SAAS,MAAM,UAAU,OAAO;AAAA,YAEhC,UAAAD,kCAAAA,KAAC,aAAA,EAAY,IAAI,EAAE,MAAM,GAAG,SAAS,QAAQ,eAAe,SAAA,GAC1D,UAAA;AAAA,cAAAC,sCAAC,cAAW,SAAQ,MAAK,QAAM,MAC5B,kBAAQ,aACX;AAAA,cACAA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,SAAQ,OAAM,kBAAiB,IAAI,EAAE,IAAI,EAAA,GAC1D,UAAA,QAAQ,SAAA,CACX;AAAA,cACAD,kCAAAA,KAAC,YAAA,EAAW,SAAQ,MAAK,OAAM,WAAU,IAAI,EAAE,IAAI,OAAA,GAChD,UAAA;AAAA,gBAAA,QAAQ,qBAAqB,QAAQ,CAAC;AAAA,gBAAE;AAAA,cAAA,GAC3C;AAAA,cACAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,WAAU,OAAM,kBACjC,UAAA;AAAA,gBAAA,QAAQ;AAAA,gBAAW;AAAA,gBAAI,QAAQ;AAAA,cAAA,GAClC;AAAA,cACC,QAAQ,gBAAgB,KACvBC,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAM;AAAA,kBACN,OAAM;AAAA,kBACN,MAAK;AAAA,kBACL,IAAI,EAAE,IAAI,EAAA;AAAA,gBAAE;AAAA,cAAA;AAAA,YACd,EAAA,CAEJ;AAAA,UAAA;AAAA,QAAA,EACF,GAjCmC,QAAQ,UAkC7C,CACD,GACH,EAAA,CAEJ;AAAA,MAAA,EAAA,CACF,GACF,GACF;AAAA,MAGAA,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,IAAI,EAAE,QAAQ,QAAQ,SAAS,QAAQ,eAAe,SAAA,GAC1D,UAAAD,kCAAAA,KAAC,aAAA,EAAY,IAAI,EAAE,MAAM,GAAG,SAAS,QAAQ,eAAe,YAC1D,UAAA;AAAA,QAAAA,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,YAAY,UAAU,IAAI,EAAA,GACpD,UAAA;AAAA,UAAAC,kCAAAA,IAAC,UAAA,EAAS,IAAI,EAAE,IAAI,KAAK;AAAA,UACzBA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,MAAK,UAAA,aAAS;AAAA,gDACjC,KAAA,EAAI,IAAI,EAAE,IAAI,UACb,UAAAA,kCAAAA,IAAC,YAAA,EAAW,SAAS,WAAW,MAAK,SACnC,UAAAA,kCAAAA,IAAC,WAAA,EAAU,GACb,EAAA,CACF;AAAA,QAAA,GACF;AAAA,8CAEC,SAAA,EAAQ,IAAI,EAAE,IAAI,KAAK;AAAA,QAGxBA,kCAAAA,IAAC,OAAI,IAAI,EAAE,MAAM,GAAG,UAAU,QAAQ,IAAI,EAAA,GACvC,eAAK,WAAW,IACfA,kCAAAA,IAAC,YAAA,EAAW,OAAM,kBAAiB,OAAM,UAAS,UAAA,qBAAA,CAElD,IAEA,KAAK,IAAI,CAAC,SACRA,kCAAAA,IAAC,MAAA,EAA2B,IAAI,EAAE,IAAI,KACpC,UAAAA,kCAAAA,IAAC,aAAA,EAAY,IAAI,EAAE,IAAI,KACrB,UAAAD,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,iBAAiB,YAAY,SAAA,GACvE,UAAA;AAAA,UAAAA,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,MAAM,KACf,UAAA;AAAA,YAAAC,sCAAC,cAAW,SAAQ,aAAY,QAAM,MACnC,eAAK,aACR;AAAA,YACAD,kCAAAA,KAAC,YAAA,EAAW,SAAQ,WAAU,OAAM,kBACjC,UAAA;AAAA,cAAA,KAAK;AAAA,cAAM;AAAA,cAAE,KAAK;AAAA,cAAQ;AAAA,cAAI,KAAK,mBAAmB,QAAQ,CAAC;AAAA,cAAE;AAAA,YAAA,EAAA,CACpE;AAAA,UAAA,GACF;AAAA,UACAA,uCAAC,OAAI,IAAI,EAAE,SAAS,QAAQ,YAAY,YACtC,UAAA;AAAA,YAAAA,uCAAC,cAAW,SAAQ,aAAY,IAAI,EAAE,IAAI,KACvC,UAAA;AAAA,cAAA,KAAK,mBAAmB,QAAQ,CAAC;AAAA,cAAE;AAAA,YAAA,GACtC;AAAA,YACAC,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,SAAS,MAAM,eAAe,KAAK,UAAU;AAAA,gBAE7C,gDAAC,YAAA,CAAA,CAAW;AAAA,cAAA;AAAA,YAAA;AAAA,UACd,EAAA,CACF;AAAA,QAAA,EAAA,CACF,EAAA,CACF,EAAA,GAvBS,KAAK,UAwBhB,CACD,EAAA,CAEL;AAAA,8CAEC,SAAA,EAAQ,IAAI,EAAE,IAAI,KAAK;AAAA,8CAGvB,KAAA,EAAI,IAAI,EAAE,IAAI,EAAA,GACX,WAAA,MAAM;AACN,gBAAM,QAAQ,aAAA;AACd,iBACED,kCAAAA,KAAAE,4BAAA,EACE,UAAA;AAAA,YAAAF,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,iBAAiB,IAAI,EAAA,GAC/D,UAAA;AAAA,cAAAC,kCAAAA,IAAC,cAAW,UAAA,iBAAA,CAAc;AAAA,qDACzB,YAAA,EAAY,UAAA;AAAA,gBAAA,MAAM,MAAM,QAAQ,CAAC;AAAA,gBAAE;AAAA,cAAA,EAAA,CAAC;AAAA,YAAA,GACvC;AAAA,YACAD,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,iBAAiB,IAAI,EAAA,GAC/D,UAAA;AAAA,cAAAC,kCAAAA,IAAC,cAAW,UAAA,SAAA,CAAM;AAAA,qDACjB,YAAA,EAAY,UAAA;AAAA,gBAAA,MAAM,KAAK,QAAQ,CAAC;AAAA,gBAAE;AAAA,cAAA,EAAA,CAAC;AAAA,YAAA,GACtC;AAAA,YACAD,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,iBAAiB,IAAI,EAAA,GAC/D,UAAA;AAAA,cAAAC,kCAAAA,IAAC,YAAA,EAAW,SAAQ,MAAK,UAAA,WAAO;AAAA,cAChCD,kCAAAA,KAAC,YAAA,EAAW,SAAQ,MAAM,UAAA;AAAA,gBAAA,MAAM,OAAO,QAAQ,CAAC;AAAA,gBAAE;AAAA,cAAA,EAAA,CAAC;AAAA,YAAA,EAAA,CACrD;AAAA,UAAA,GACF;AAAA,QAEJ,KAAG,CACL;AAAA,QAGAA,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,eAAe,UAAU,KAAK,EAAA,GACxD,UAAA;AAAA,UAAAC,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,iDAAYE,aAAA,EAAa;AAAA,cACzB,SAAS,MAAM,sBAAsB,IAAI;AAAA,cACzC,UAAU,KAAK,WAAW;AAAA,cAC1B,WAAS;AAAA,cACV,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAGDH,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,iDAAY,aAAA,EAAY;AAAA,cACxB,SAAS,MAAM,qBAAqB,IAAI;AAAA,cACxC,UAAU,KAAK,WAAW;AAAA,cAC1B,WAAS;AAAA,cACT,MAAK;AAAA,cACN,UAAA;AAAA,gBAAA;AAAA,gBACY,eAAe,OAAO,QAAQ,CAAC;AAAA,gBAAE;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAC9C,EAAA,CACF;AAAA,MAAA,EAAA,CACF,GACF,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAA,kCAAAA,KAAC,QAAA,EAAO,MAAM,mBAAmB,SAAS,MAAM,qBAAqB,KAAK,GAAG,UAAS,MAAK,WAAS,MAClG,UAAA;AAAA,MAAAC,kCAAAA,IAAC,eAAY,UAAA,sBAAA,CAAmB;AAAA,6CAC/B,eAAA,EACC,UAAA;AAAA,QAAAA,kCAAAA,IAAC,KAAA,EAAI,IAAI,EAAE,IAAI,EAAA,GACb,UAAAD,kCAAAA,KAAC,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA;AAAA,UAAA;AAAA,UACrB,eAAe,OAAO,QAAQ,CAAC;AAAA,UAAE;AAAA,QAAA,EAAA,CAClD,EAAA,CACF;AAAA,QACAA,uCAAC,eAAY,WAAS,MAAC,IAAI,EAAE,IAAI,KAC/B,UAAA;AAAA,UAAAC,kCAAAA,IAAC,cAAW,UAAA,cAAA,CAAW;AAAA,UACvBA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAO;AAAA,cACP,UAAU,CAAC,MAAM,yBAAyB,EAAE,OAAO,KAAK;AAAA,cACxD,OAAM;AAAA,cAEL,UAAA,eAAe,IAAI,CAAA,WAClBA,kCAAAA,IAAC,UAAA,EAA4B,OAAO,OAAO,OACxC,UAAA,OAAO,MAAA,GADK,OAAO,KAEtB,CACD;AAAA,YAAA;AAAA,UAAA;AAAA,QACH,EAAA,CACF;AAAA,MAAA,GACF;AAAA,6CACC,eAAA,EACC,UAAA;AAAA,QAAAA,sCAAC,UAAO,SAAS,MAAM,qBAAqB,KAAK,GAAG,UAAA,aAAS;AAAA,8CAC5D,QAAA,EAAO,SAAS,YAAY,SAAQ,aAAY,UAAA,sBAAA,CAEjD;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAD,kCAAAA,KAAC,QAAA,EAAO,MAAM,oBAAoB,SAAS,MAAM,sBAAsB,KAAK,GAAG,UAAS,MAAK,WAAS,MACpG,UAAA;AAAA,MAAAC,kCAAAA,IAAC,eAAY,UAAA,kBAAA,CAAe;AAAA,4CAC3B,eAAA,EACC,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAS;AAAA,UACT,OAAM;AAAA,UACN,MAAK;AAAA,UACL,OAAO;AAAA,UACP,UAAU,CAAC,MAAM,mBAAmB,OAAO,EAAE,OAAO,KAAK,CAAC;AAAA,UAC1D,YAAY,EAAE,KAAK,GAAG,KAAK,KAAK,MAAM,IAAA;AAAA,UACtC,IAAI,EAAE,IAAI,EAAA;AAAA,QAAE;AAAA,MAAA,GAEhB;AAAA,6CACC,eAAA,EACC,UAAA;AAAA,QAAAA,sCAAC,UAAO,SAAS,MAAM,sBAAsB,KAAK,GAAG,UAAA,aAAS;AAAA,8CAC7D,QAAA,EAAO,SAAS,eAAe,SAAQ,aAAY,UAAA,kBAAA,CAEpD;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,EAAA,CACF;AAAA,EAAA,GACF;AAEJ;;;;;ACxcA,MAAM,kBAA4B,MAAM;AACtC,QAAM,CAAC,aAAa,cAAc,IAAIH,aAAAA,SAA6B,IAAI;AACvE,QAAM,CAAC,OAAO,QAAQ,IAAIA,aAAAA,SAAiB,CAAA,CAAE;AAC7C,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,aAAAA,SAAwB,IAAI;AACtD,QAAM,CAAC,wBAAwB,yBAAyB,IAAIA,aAAAA,SAAS,KAAK;AAC1E,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,aAAAA,SAAS,KAAK;AACtE,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,EAAE;AACzC,QAAM,CAAC,cAAc,eAAe,IAAIA,aAAAA,UAAS,oBAAI,QAAO,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC;AAEvFC,eAAAA,UAAU,MAAM;AACd,cAAA;AAAA,EACF,GAAG,CAAA,CAAE;AAEL,QAAM,YAAY,MAAY;AAC5B,QAAI;AACF,iBAAW,IAAI;AACf,YAAM,WAAW,MAAM,MAAM,gBAAgB;AAC7C,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,iBAAS,KAAK,KAAK;AAAA,MACrB,OAAO;AACL,iBAAS,gCAAgC;AAAA,MAC3C;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,oBAAoB,MAAY;AACpC,QAAI;AACF,iBAAW,IAAI;AACf,YAAM,WAAW,MAAM,MAAM,gCAAgC;AAAA,QAC3D,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,UAAU;AAAA,QAAA,CACX;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,cAAM,OAAO,MAAM,SAAS,KAAA;AAC5B,uBAAe,KAAK,YAAY;AAChC,kCAA0B,KAAK;AAC/B,mBAAW,EAAE;AAAA,MACf,OAAO;AACL,iBAAS,yCAAyC;AAAA,MACpD;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,eAAe,MAAY;AAC/B,QAAI;AACF,iBAAW,IAAI;AACf,YAAM,WAAW,MAAM,MAAM,qCAAqC;AAAA,QAChE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAAA;AAAA,QAElB,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO;AAAA,QAAA,CACR;AAAA,MAAA,CACF;AAED,UAAI,SAAS,IAAI;AACf,gCAAwB,KAAK;AAC7B,cAAM,8CAA8C;AAAA,MACtD,OAAO;AACL,iBAAS,yBAAyB;AAAA,MACpC;AAAA,IACF,SAAS,KAAK;AACZ,eAAS,mBAAmB;AAAA,IAC9B,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,IAAA,CACX,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAM,aAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,OAAO;AAAA,EACxD;AAEA,QAAM,wBAAwB,CAAC,WAAmB;AAChD,UAAM,SAAoF;AAAA,MACxF,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,UAAU;AAAA,MACV,UAAU;AAAA,IAAA;AAEZ,WAAO,OAAO,MAAM,KAAK;AAAA,EAC3B;AAEA,QAAM,wBAAwB,CAAC,WAAmB;AAChD,UAAM,SAAiC;AAAA,MACrC,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,UAAU;AAAA,MACV,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,YAAY;AAAA,IAAA;AAEd,WAAO,OAAO,MAAM,KAAK;AAAA,EAC3B;AAEA,gDACG,KAAA,EAAI,IAAI,EAAE,GAAG,KACZ,UAAA;AAAA,IAAAC,kCAAAA,KAAC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,iBAAiB,YAAY,UAAU,IAAI,EAAA,GACrF,UAAA;AAAA,MAAAC,kCAAAA,IAAC,YAAA,EAAW,SAAQ,MAAK,UAAA,+BAEzB;AAAA,MACAD,uCAAC,OAAI,IAAI,EAAE,SAAS,QAAQ,KAAK,KAC/B,UAAA;AAAA,QAAAC,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,iDAAY,gBAAA,EAAe;AAAA,YAC3B,SAAS,MAAM,0BAA0B,IAAI;AAAA,YAC9C,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,QAGDA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,iDAAY,cAAA,EAAa;AAAA,YACzB,SAAS,MAAM,wBAAwB,IAAI;AAAA,YAC3C,UAAU,CAAC;AAAA,YACZ,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAED,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAEC,SACCA,kCAAAA,IAAC,OAAA,EAAM,UAAS,SAAQ,IAAI,EAAE,IAAI,EAAA,GAAK,SAAS,MAAM,SAAS,IAAI,GAChE,UAAA,OACH;AAAA,IAGFD,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GAEtB,UAAA;AAAA,MAAA,eACCC,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IACb,UAAAA,kCAAAA,IAAC,MAAA,EACC,UAAAD,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,QAAAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA;AAAA,UAAA;AAAA,UAClB,WAAW,YAAY,KAAK;AAAA,QAAA,GAChD;AAAA,QAEAA,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GAAG,IAAI,EAAE,IAAI,EAAA,GACpC,UAAA;AAAA,UAAAC,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,uCAAC,KAAA,EAAI,IAAI,EAAE,WAAW,UAAU,GAAG,GAAG,SAAS,iBAAiB,cAAc,KAC5E,UAAA;AAAA,YAAAC,kCAAAA,IAACG,SAAA,EAAY,IAAI,EAAE,UAAU,IAAI,OAAO,SAAS,IAAI,EAAA,EAAE,CAAG;AAAA,kDACzD,YAAA,EAAW,SAAQ,MAAK,OAAM,SAC5B,sBAAY,eACf;AAAA,kDACC,YAAA,EAAW,SAAQ,SAAQ,OAAM,SAAQ,UAAA,SAAA,CAE1C;AAAA,UAAA,EAAA,CACF,EAAA,CACF;AAAA,UAEAH,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,uCAAC,KAAA,EAAI,IAAI,EAAE,WAAW,UAAU,GAAG,GAAG,SAAS,iBAAiB,cAAc,KAC5E,UAAA;AAAA,YAAAC,kCAAAA,IAAC,UAAA,EAAS,IAAI,EAAE,UAAU,IAAI,OAAO,SAAS,IAAI,EAAA,EAAE,CAAG;AAAA,YACvDA,kCAAAA,IAAC,cAAW,SAAQ,MAAK,OAAM,SAC5B,UAAA,eAAe,YAAY,oBAAoB,EAAA,CAClD;AAAA,kDACC,YAAA,EAAW,SAAQ,SAAQ,OAAM,SAAQ,UAAA,kBAAA,CAE1C;AAAA,UAAA,EAAA,CACF,EAAA,CACF;AAAA,UAEAA,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,uCAAC,KAAA,EAAI,IAAI,EAAE,WAAW,UAAU,GAAG,GAAG,SAAS,cAAc,cAAc,KACzE,UAAA;AAAA,YAAAC,kCAAAA,IAACI,YAAA,EAAe,IAAI,EAAE,UAAU,IAAI,OAAO,SAAS,IAAI,EAAA,EAAE,CAAG;AAAA,YAC7DJ,kCAAAA,IAAC,cAAW,SAAQ,MAAK,OAAM,SAC5B,UAAA,eAAe,YAAY,mBAAmB,EAAA,CACjD;AAAA,kDACC,YAAA,EAAW,SAAQ,SAAQ,OAAM,SAAQ,UAAA,iBAAA,CAE1C;AAAA,UAAA,EAAA,CACF,EAAA,CACF;AAAA,UAEAA,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,uCAAC,KAAA,EAAI,IAAI,EAAE,WAAW,UAAU,GAAG,GAAG,SAAS,iBAAiB,cAAc,KAC5E,UAAA;AAAA,YAAAC,kCAAAA,IAAC,aAAA,EAAY,IAAI,EAAE,UAAU,IAAI,OAAO,SAAS,IAAI,EAAA,EAAE,CAAG;AAAA,YAC1DA,kCAAAA,IAAC,cAAW,SAAQ,MAAK,OAAM,SAC5B,UAAA,eAAe,YAAY,WAAW,EAAA,CACzC;AAAA,kDACC,YAAA,EAAW,SAAQ,SAAQ,OAAM,SAAQ,UAAA,eAAA,CAE1C;AAAA,UAAA,EAAA,CACF,EAAA,CACF;AAAA,QAAA,GACF;AAAA,8CAEC,SAAA,EAAQ,IAAI,EAAE,IAAI,KAAK;AAAA,8CAGvB,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA,iBAEtC;AAAA,QACAA,sCAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACtB,UAAA,OAAO,QAAQ,YAAY,6BAA6B,EAAE,IAAI,CAAC,CAAC,QAAQ,MAAM,MAC7EA,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GACpB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,SAAQ,YACZ,iDAAC,aAAA,EAAY,IAAI,EAAE,WAAW,YAC5B,UAAA;AAAA,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAO,sBAAsB,MAAM;AAAA,cACnC,OAAO,sBAAsB,MAAM;AAAA,cACnC,IAAI,EAAE,IAAI,EAAA;AAAA,YAAE;AAAA,UAAA;AAAA,gDAEb,YAAA,EAAW,SAAQ,MACjB,UAAA,eAAe,MAAM,EAAA,CACxB;AAAA,QAAA,EAAA,CACF,EAAA,CACF,EAAA,GAZ4B,MAa9B,CACD,EAAA,CACH;AAAA,8CAEC,SAAA,EAAQ,IAAI,EAAE,IAAI,KAAK;AAAA,8CAGvB,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA,iBAEtC;AAAA,QACAD,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,UAAAC,sCAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,SAAQ,YACZ,UAAAD,uCAAC,aAAA,EACC,UAAA;AAAA,YAAAC,sCAAC,YAAA,EAAW,SAAQ,aAAY,OAAM,kBAAiB,UAAA,wBAEvD;AAAA,kDACC,YAAA,EAAW,SAAQ,MACjB,UAAA,eAAe,YAAY,oBAAoB,EAAA,CAClD;AAAA,UAAA,EAAA,CACF,GACF,GACF;AAAA,UACAA,sCAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,SAAQ,YACZ,iDAAC,aAAA,EACC,UAAA;AAAA,YAAAA,sCAAC,YAAA,EAAW,SAAQ,aAAY,OAAM,kBAAiB,UAAA,sBAEvD;AAAA,kDACC,YAAA,EAAW,SAAQ,MACjB,UAAA,eAAe,YAAY,kBAAkB,EAAA,CAChD;AAAA,UAAA,EAAA,CACF,GACF,GACF;AAAA,UACAA,sCAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAAC,MAAA,EAAK,SAAQ,YACZ,iDAAC,aAAA,EACC,UAAA;AAAA,YAAAA,sCAAC,YAAA,EAAW,SAAQ,aAAY,OAAM,kBAAiB,UAAA,aAEvD;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,OAAO,YAAY,aAAa,IAAI,iBAAiB;AAAA,gBAEpD,UAAA,eAAe,YAAY,SAAS;AAAA,cAAA;AAAA,YAAA;AAAA,UACvC,EAAA,CACF,GACF,EAAA,CACF;AAAA,QAAA,GACF;AAAA,QAGC,YAAY,eAAe,SAAS,KACnCD,kCAAAA,KAAAE,kBAAAA,UAAA,EACE,UAAA;AAAA,UAAAD,kCAAAA,IAAC,SAAA,EAAQ,IAAI,EAAE,IAAI,KAAK;AAAA,UACxBD,kCAAAA,KAAC,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA;AAAA,YAAA;AAAA,YACnB,YAAY,eAAe;AAAA,YAAO;AAAA,UAAA,GACrD;AAAA,gDACC,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,UAAU,QAAQ,KAAK,EAAA,GAChD,UAAA,YAAY,eAAe,IAAI,CAAC,WAAW,UAC1CC,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cAEC,OAAO,OAAO,QAAQ,CAAC;AAAA,cACvB,SAAQ;AAAA,cACR,4CAAO,iBAAA,CAAA,CAAgB;AAAA,YAAA;AAAA,YAHlB;AAAA,UAAA,CAKR,EAAA,CACH;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CAEJ,GACF,GACF;AAAA,MAIFA,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IACb,UAAAA,kCAAAA,IAAC,MAAA,EACC,UAAAD,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,QAAAC,sCAAC,YAAA,EAAW,SAAQ,MAAK,cAAY,MAAC,UAAA,sBAEtC;AAAA,QAEC,gDACE,KAAA,EAAI,IAAI,EAAE,SAAS,QAAQ,gBAAgB,UAAU,GAAG,KACvD,UAAAA,sCAAC,oBAAiB,EAAA,CACpB,0CAEC,gBAAA,EAAe,WAAW,OACzB,UAAAD,kCAAAA,KAAC,OAAA,EACC,UAAA;AAAA,UAAAC,kCAAAA,IAAC,WAAA,EACC,iDAAC,UAAA,EACC,UAAA;AAAA,YAAAA,kCAAAA,IAAC,aAAU,UAAA,WAAA,CAAQ;AAAA,YACnBA,kCAAAA,IAAC,aAAU,UAAA,QAAA,CAAK;AAAA,YAChBA,kCAAAA,IAAC,aAAU,UAAA,QAAA,CAAK;AAAA,YAChBA,kCAAAA,IAAC,aAAU,UAAA,UAAA,CAAO;AAAA,YAClBA,kCAAAA,IAAC,WAAA,EAAU,OAAM,SAAQ,UAAA,SAAK;AAAA,YAC9BA,kCAAAA,IAAC,WAAA,EAAU,OAAM,SAAQ,UAAA,SAAK;AAAA,YAC9BA,kCAAAA,IAAC,WAAA,EAAU,OAAM,SAAQ,UAAA,UAAM;AAAA,YAC/BA,kCAAAA,IAAC,aAAU,UAAA,cAAA,CAAW;AAAA,YACtBA,kCAAAA,IAAC,aAAU,UAAA,SAAA,CAAM;AAAA,UAAA,EAAA,CACnB,EAAA,CACF;AAAA,gDACC,WAAA,EACE,UAAA,MAAM,IAAI,CAAC,gDACT,UAAA,EACC,UAAA;AAAA,YAAAA,kCAAAA,IAAC,WAAA,EAAW,eAAK,SAAA,CAAS;AAAA,YAC1BA,kCAAAA,IAAC,WAAA,EAAW,UAAA,WAAW,KAAK,aAAa,GAAE;AAAA,YAC3CA,kCAAAA,IAAC,WAAA,EAAW,UAAA,KAAK,WAAA,CAAW;AAAA,YAC5BA,kCAAAA,IAAC,WAAA,EAAW,UAAA,KAAK,eAAA,CAAe;AAAA,kDAC/B,WAAA,EAAU,OAAM,SAAS,UAAA,eAAe,KAAK,YAAY,GAAE;AAAA,kDAC3D,WAAA,EAAU,OAAM,SAAS,UAAA,eAAe,KAAK,WAAW,GAAE;AAAA,kDAC1D,WAAA,EAAU,OAAM,SAAS,UAAA,eAAe,KAAK,aAAa,GAAE;AAAA,kDAC5D,WAAA,EACC,UAAAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,sBAAsB,KAAK,WAAW;AAAA,gBAC7C,OAAO,sBAAsB,KAAK,WAAW;AAAA,gBAC7C,MAAK;AAAA,cAAA;AAAA,YAAA,GAET;AAAA,kDACC,WAAA,EACC,UAAAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,KAAK;AAAA,gBACZ,OAAO,KAAK,WAAW,kBAAkB,YAAY;AAAA,gBACrD,MAAK;AAAA,cAAA;AAAA,YAAA,EACP,CACF;AAAA,UAAA,KArBa,KAAK,QAsBpB,CACD,EAAA,CACH;AAAA,QAAA,EAAA,CACF,EAAA,CACF;AAAA,MAAA,EAAA,CAEJ,GACF,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAD,kCAAAA,KAAC,QAAA,EAAO,MAAM,wBAAwB,SAAS,MAAM,0BAA0B,KAAK,GAAG,UAAS,MAAK,WAAS,MAC5G,UAAA;AAAA,MAAAC,kCAAAA,IAAC,eAAY,UAAA,yBAAA,CAAsB;AAAA,4CAClC,eAAA,EACC,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAS;AAAA,UACT,OAAM;AAAA,UACN,OAAO;AAAA,UACP,UAAU,CAAC,MAAM,WAAW,EAAE,OAAO,KAAK;AAAA,UAC1C,IAAI,EAAE,IAAI,EAAA;AAAA,UACV,aAAY;AAAA,QAAA;AAAA,MAAA,GAEhB;AAAA,6CACC,eAAA,EACC,UAAA;AAAA,QAAAA,sCAAC,UAAO,SAAS,MAAM,0BAA0B,KAAK,GAAG,UAAA,aAAS;AAAA,QAClEA,kCAAAA,IAAC,UAAO,SAAS,mBAAmB,SAAQ,aAAY,UAAU,CAAC,SAAS,UAAA,YAAA,CAE5E;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAD,kCAAAA,KAAC,QAAA,EAAO,MAAM,sBAAsB,SAAS,MAAM,wBAAwB,KAAK,GAAG,UAAS,MAAK,WAAS,MACxG,UAAA;AAAA,MAAAC,kCAAAA,IAAC,eAAY,UAAA,cAAA,CAAW;AAAA,6CACvB,eAAA,EACC,UAAA;AAAA,QAAAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAS;AAAA,YACT,OAAM;AAAA,YACN,MAAK;AAAA,YACL,OAAO;AAAA,YACP,UAAU,CAAC,MAAM,gBAAgB,EAAE,OAAO,KAAK;AAAA,YAC/C,IAAI,EAAE,IAAI,EAAA;AAAA,YACV,iBAAiB,EAAE,QAAQ,KAAA;AAAA,UAAK;AAAA,QAAA;AAAA,QAElCA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,SAAQ,OAAM,kBAAiB,IAAI,EAAE,IAAI,KAAK,UAAA,2GAAA,CAElE;AAAA,MAAA,GACF;AAAA,6CACC,eAAA,EACC,UAAA;AAAA,QAAAA,sCAAC,UAAO,SAAS,MAAM,wBAAwB,KAAK,GAAG,UAAA,aAAS;AAAA,8CAC/D,QAAA,EAAO,SAAS,cAAc,SAAQ,aAAY,UAAA,cAAA,CAEnD;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,EAAA,CACF;AAAA,EAAA,GACF;AAEJ;;;;;AC9cA,SAAS,SAAS,OAAsB;AACtC,QAA6C,YAArC,YAAU,OAAO,UAAoB,IAAV,kBAAU,IAAV,CAA3B,YAAU,SAAO;AAEzB,SACEA,kCAAAA;AAAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,QAAQ,UAAU;AAAA,MAClB,IAAI,oBAAoB,KAAK;AAAA,MAC7B,mBAAiB,eAAe,KAAK;AAAA,OACjC,QALL;AAAA,MAOE,oBAAU,SACTA,kCAAAA,IAAC,KAAA,EAAI,WAAU,QACZ,SAAA,CACH;AAAA,IAAA;AAAA,EAAA;AAIR;AAEA,SAAS,UAAU,OAAe;AAChC,SAAO;AAAA,IACL,IAAI,eAAe,KAAK;AAAA,IACxB,iBAAiB,oBAAoB,KAAK;AAAA,EAAA;AAE9C;AAEO,MAAM,kBAA4B,MAAM;AAC7C,QAAM,CAAC,UAAU,WAAW,IAAIH,aAAAA,SAAS,CAAC;AAE1C,QAAM,kBAAkB,CAAC,OAA6B,aAAqB;AACzE,gBAAY,QAAQ;AAAA,EACtB;AAEA,SACEG,kCAAAA,IAAC,aAAU,UAAS,MAAK,WAAU,QACjC,UAAAD,kCAAAA,KAAC,OAAA,EAAM,WAAU,OAEf,UAAA;AAAA,IAAAA,kCAAAA,KAAC,KAAA,EAAI,WAAU,QACb,UAAA;AAAA,MAAAC,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,QAAO,UAAA,qCAE1C;AAAA,4CACC,YAAA,EAAW,SAAQ,SAAQ,OAAM,iBAAgB,UAAA,kDAAA,CAElD;AAAA,IAAA,GACF;AAAA,IAGAA,kCAAAA,IAAC,KAAA,EAAI,WAAU,4BACb,UAAAD,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,QACP,UAAU;AAAA,QACV,cAAW;AAAA,QACX,SAAQ;AAAA,QACR,eAAc;AAAA,QAEd,UAAA;AAAA,UAAAC,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OACED,kCAAAA,KAAC,KAAA,EAAI,WAAU,2BACb,UAAA;AAAA,gBAAAC,kCAAAA,IAACK,YAAA,EAAY;AAAA,gBACbL,kCAAAA,IAAC,UAAK,UAAA,kBAAA,CAAe;AAAA,cAAA,GACvB;AAAA,eAEE,UAAU,CAAC;AAAA,UAAA;AAAA,UAEjBA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OACED,kCAAAA,KAAC,KAAA,EAAI,WAAU,2BACb,UAAA;AAAA,gBAAAC,kCAAAA,IAAC,eAAA,EAAc;AAAA,gBACfA,kCAAAA,IAAC,UAAK,UAAA,WAAA,CAAQ;AAAA,cAAA,GAChB;AAAA,eAEE,UAAU,CAAC;AAAA,UAAA;AAAA,UAEjBA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OACED,kCAAAA,KAAC,KAAA,EAAI,WAAU,2BACb,UAAA;AAAA,gBAAAC,kCAAAA,IAAC,aAAA,EAAY;AAAA,gBACbA,kCAAAA,IAAC,UAAK,UAAA,aAAA,CAAU;AAAA,cAAA,GAClB;AAAA,eAEE,UAAU,CAAC;AAAA,UAAA;AAAA,QACjB;AAAA,MAAA;AAAA,IAAA,GAEJ;AAAA,IAGAA,kCAAAA,IAAC,YAAS,OAAO,UAAU,OAAO,GAChC,UAAAD,kCAAAA,KAAC,MAAA,EAAK,WAAU,OACd,UAAA;AAAA,MAAAC,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,QAAO,UAAA,+BAE1C;AAAA,MACAA,kCAAAA,IAAC,cAAW,SAAQ,SAAQ,OAAM,iBAAgB,WAAU,QAAO,UAAA,iGAAA,CAEnE;AAAA,MACAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,mBAAmB,CAAC,YAAY;AAC9B,oBAAQ,IAAI,oBAAoB,OAAO;AAAA,UAEzC;AAAA,UACA,SAAS,CAAC,UAAU;AAClB,oBAAQ,MAAM,mBAAmB,KAAK;AAAA,UACxC;AAAA,QAAA;AAAA,MAAA;AAAA,IACF,EAAA,CACF,EAAA,CACF;AAAA,IAEAA,kCAAAA,IAAC,YAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA,IAAC,wBAAqB,EAAA,CACxB;AAAA,IAEAA,kCAAAA,IAAC,YAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA,IAAC,qBAAkB,EAAA,CACrB;AAAA,EAAA,EAAA,CACF,EAAA,CACF;AAEJ;;;;;"}