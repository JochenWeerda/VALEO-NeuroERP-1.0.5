{"version":3,"file":"e-invoicing-DCH02efg.js","sources":["../../src/components/e-invoicing/EInvoicingList.tsx","../../src/components/e-invoicing/EInvoicingForm.tsx","../../src/components/e-invoicing/EInvoicingStatistics.tsx","../../src/components/e-invoicing/EInvoicingValidation.tsx","../../src/components/e-invoicing/EInvoicingPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Space, Tag, Card, Row, Col, Statistic, Input, Select, DatePicker } from 'antd';\r\nimport { DownloadOutlined, EyeOutlined, DeleteOutlined, PlusOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { formatCurrency, formatDate } from '../../utils/formatters';\r\nimport { InvoiceSummary, InvoiceFilter, InvoiceStatus } from '../../types/invoices';\r\nimport { EInvoicingApi } from '../../services/eInvoicingApi';\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\ninterface EInvoicingListProps {\r\n  // Props für die e-Invoicing-Liste\r\n}\r\n\r\nconst EInvoicingList: React.FC<EInvoicingListProps> = () => {\r\n  const [invoices, setInvoices] = useState<InvoiceSummary[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [filter, setFilter] = useState<InvoiceFilter>({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchInvoices();\r\n  }, [filter, pagination.current, pagination.pageSize]);\r\n\r\n  const fetchInvoices = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await EInvoicingApi.getInvoices(filter);\r\n      setInvoices(data);\r\n      setPagination(prev => ({ ...prev, total: data.length }));\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden der e-Rechnungen:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (invoiceId: string) => {\r\n    try {\r\n      const blob = await EInvoicingApi.downloadInvoice(invoiceId);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `invoice-${invoiceId}.pdf`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Fehler beim Herunterladen:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'PAID': return 'green';\r\n      case 'PENDING': return 'orange';\r\n      case 'OVERDUE': return 'red';\r\n      case 'DRAFT': return 'blue';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (status: string) => {\r\n    switch (status) {\r\n      case 'PAID': return 'Bezahlt';\r\n      case 'PENDING': return 'Ausstehend';\r\n      case 'OVERDUE': return 'Überfällig';\r\n      case 'DRAFT': return 'Entwurf';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Rechnungsnummer',\r\n      dataIndex: 'invoiceNumber',\r\n      key: 'invoiceNumber',\r\n      fixed: 'left' as const,\r\n      width: 150,\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: 'Kunde',\r\n      dataIndex: 'customerName',\r\n      key: 'customerName',\r\n      width: 200,\r\n    },\r\n    {\r\n      title: 'Betrag',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n      width: 120,\r\n      render: (amount: number, record: InvoiceSummary) => \r\n        formatCurrency(amount, record.currency),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      width: 120,\r\n      render: (status: string) => (\r\n        <Tag color={getStatusColor(status)}>\r\n          {getStatusLabel(status)}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Erstellt',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      width: 120,\r\n      render: (date: string) => formatDate(date),\r\n    },\r\n    {\r\n      title: 'Aktionen',\r\n      key: 'actions',\r\n      fixed: 'right' as const,\r\n      width: 150,\r\n      render: (text: string, record: InvoiceSummary) => (\r\n        <Space size=\"small\">\r\n          <Button\r\n            type=\"link\"\r\n            icon={<EyeOutlined />}\r\n            onClick={() => handleView(record.invoiceId)}\r\n            title=\"Anzeigen\"\r\n          />\r\n          <Button\r\n            type=\"link\"\r\n            icon={<DownloadOutlined />}\r\n            onClick={() => handleDownload(record.invoiceId)}\r\n            title=\"Herunterladen\"\r\n          />\r\n          <Button\r\n            type=\"link\"\r\n            danger\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => handleDelete(record.invoiceId)}\r\n            title=\"Löschen\"\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleView = (invoiceId: string) => {\r\n    // Implementierung für Anzeigen der e-Rechnung\r\n    console.log('Anzeigen e-Rechnung:', invoiceId);\r\n  };\r\n\r\n  const handleDelete = (invoiceId: string) => {\r\n    // Implementierung für Löschen der e-Rechnung\r\n    console.log('Löschen e-Rechnung:', invoiceId);\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    setFilter(prev => ({ ...prev, search: value }));\r\n  };\r\n\r\n  const handleStatusFilter = (value: string) => {\r\n    setFilter(prev => ({ ...prev, status: value as InvoiceStatus }));\r\n  };\r\n\r\n  const handleDateRangeFilter = (dates: any) => {\r\n    if (dates) {\r\n      setFilter(prev => ({\r\n        ...prev,\r\n        startDate: dates[0]?.toISOString(),\r\n        endDate: dates[1]?.toISOString(),\r\n      }));\r\n    } else {\r\n      setFilter(prev => ({\r\n        ...prev,\r\n        startDate: '',\r\n        endDate: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTableChange = (pagination: any) => {\r\n    setPagination(prev => ({\r\n      ...prev,\r\n      current: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n    }));\r\n  };\r\n\r\n  // Mock-Statistiken\r\n  const statistics = {\r\n    totalInvoices: invoices.length,\r\n    totalAmount: invoices.reduce((sum, inv) => sum + inv.amount, 0),\r\n    paidInvoices: invoices.filter(inv => inv.status === 'paid').length,\r\n    pendingInvoices: invoices.filter(inv => inv.status === 'open').length,\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {/* Statistiken */}\r\n      <Card size=\"small\" className=\"mb-4\">\r\n        <Row gutter={16}>\r\n          <Col span={6}>\r\n            <Statistic\r\n              title=\"Gesamt e-Rechnungen\"\r\n              value={statistics.totalInvoices}\r\n              suffix=\"Stück\"\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic\r\n              title=\"Gesamtbetrag\"\r\n              value={statistics.totalAmount}\r\n              precision={2}\r\n              suffix=\"€\"\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic\r\n              title=\"Bezahlte e-Rechnungen\"\r\n              value={statistics.paidInvoices}\r\n              suffix=\"Stück\"\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <Statistic\r\n              title=\"Ausstehende e-Rechnungen\"\r\n              value={statistics.pendingInvoices}\r\n              suffix=\"Stück\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n\r\n      {/* Filter */}\r\n      <Card size=\"small\" className=\"mb-4\">\r\n        <Row gutter={16} align=\"middle\">\r\n          <Col span={6}>\r\n            <Search\r\n              placeholder=\"Suche nach Rechnungsnummer oder Kunde\"\r\n              onSearch={handleSearch}\r\n              enterButton={<SearchOutlined />}\r\n            />\r\n          </Col>\r\n          <Col span={4}>\r\n            <Select\r\n              placeholder=\"Status\"\r\n              allowClear\r\n              style={{ width: '100%' }}\r\n              onChange={handleStatusFilter}\r\n            >\r\n              <Option value=\"PAID\">Bezahlt</Option>\r\n              <Option value=\"PENDING\">Ausstehend</Option>\r\n              <Option value=\"OVERDUE\">Überfällig</Option>\r\n              <Option value=\"DRAFT\">Entwurf</Option>\r\n            </Select>\r\n          </Col>\r\n          <Col span={6}>\r\n            <RangePicker\r\n              placeholder={['Startdatum', 'Enddatum']}\r\n              onChange={handleDateRangeFilter}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Col>\r\n          <Col span={8}>\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={() => console.log('Neue e-Rechnung erstellen')}\r\n              >\r\n                Neue e-Rechnung\r\n              </Button>\r\n              <Button onClick={fetchInvoices}>\r\n                Aktualisieren\r\n              </Button>\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n\r\n      {/* Tabelle */}\r\n      <Card>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={invoices}\r\n          rowKey=\"invoiceId\"\r\n          loading={loading}\r\n          pagination={{\r\n            current: pagination.current,\r\n            pageSize: pagination.pageSize,\r\n            total: pagination.total,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) =>\r\n              `${range[0]}-${range[1]} von ${total} e-Rechnungen`,\r\n          }}\r\n          onChange={handleTableChange}\r\n          scroll={{ x: 1000 }}\r\n          size=\"small\"\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EInvoicingList; ","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  Alert,\r\n  Divider\r\n} from '@mui/material';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { formatCurrency } from '../../utils/formatters';\r\nimport { EInvoicingFormData, InvoiceItem } from '../../types/invoices';\r\n\r\nconst schema = yup.object({\r\n  customerId: yup.string().required('Kunde ist erforderlich'),\r\n  customerName: yup.string().required('Kundenname ist erforderlich'),\r\n  customerEmail: yup.string().email('Ungültige E-Mail').required('E-Mail ist erforderlich'),\r\n  amount: yup.number().positive('Betrag muss positiv sein').required('Betrag ist erforderlich'),\r\n  taxAmount: yup.number().min(0, 'Steuerbetrag darf nicht negativ sein').required('Steuerbetrag ist erforderlich'),\r\n  totalAmount: yup.number().positive('Gesamtbetrag muss positiv sein').required('Gesamtbetrag ist erforderlich'),\r\n  currency: yup.string().required('Währung ist erforderlich'),\r\n  description: yup.string().required('Beschreibung ist erforderlich'),\r\n  dueDate: yup.string().required('Fälligkeitsdatum ist erforderlich')\r\n});\r\n\r\ninterface EInvoicingFormProps {\r\n  initialData?: Partial<EInvoicingFormData>;\r\n  onSubmit: (data: EInvoicingFormData) => Promise<void>;\r\n  onCancel?: () => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\n/**\r\n * E-Invoicing Formular Komponente\r\n * Erstellt und bearbeitet elektronische Rechnungen\r\n */\r\nexport const EInvoicingForm: React.FC<EInvoicingFormProps> = ({\r\n  initialData,\r\n  onSubmit,\r\n  onCancel,\r\n  isLoading = false\r\n}) => {\r\n  const [items, setItems] = useState<InvoiceItem[]>(initialData?.items || []);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n    setValue\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      customerId: initialData?.customerId || '',\r\n      customerName: initialData?.customerName || '',\r\n      customerEmail: initialData?.customerEmail || '',\r\n      amount: initialData?.amount || 0,\r\n      taxAmount: initialData?.taxAmount || 0,\r\n      totalAmount: initialData?.totalAmount || 0,\r\n      currency: initialData?.currency || 'EUR',\r\n      description: initialData?.description || '',\r\n      dueDate: initialData?.dueDate || new Date().toISOString().split('T')[0],\r\n      // items: initialData?.items || []\r\n    }\r\n  });\r\n\r\n  const watchedAmount = watch('amount');\r\n  const watchedTaxAmount = watch('taxAmount');\r\n\r\n  // Berechne Gesamtbetrag automatisch\r\n  React.useEffect(() => {\r\n    const total = watchedAmount + watchedTaxAmount;\r\n    setValue('totalAmount', total);\r\n  }, [watchedAmount, watchedTaxAmount, setValue]);\r\n\r\n  const handleFormSubmit = async (data: any) => {\r\n    try {\r\n      setError(null);\r\n      await onSubmit({\r\n        ...data,\r\n        items\r\n      });\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Fehler beim Speichern der Rechnung');\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    const newItem: InvoiceItem = {\r\n      id: Date.now().toString(),\r\n      name: '',\r\n      quantity: 1,\r\n      unitPrice: 0,\r\n      totalPrice: 0,\r\n      taxRate: 19, // Standard USt-Satz\r\n      taxAmount: 0\r\n    };\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const removeItem = (id: string) => {\r\n    setItems(items.filter(item => item.id !== id));\r\n  };\r\n\r\n  const updateItem = (id: string, field: keyof InvoiceItem, value: any) => {\r\n    setItems(items.map(item => {\r\n      if (item.id === id) {\r\n        const updatedItem = { ...item, [field]: value };\r\n        // Berechne abgeleitete Werte\r\n        if (field === 'quantity' || field === 'unitPrice') {\r\n          updatedItem.totalPrice = updatedItem.quantity * updatedItem.unitPrice;\r\n          updatedItem.taxAmount = updatedItem.totalPrice * (updatedItem.taxRate / 100);\r\n        }\r\n        if (field === 'taxRate') {\r\n          updatedItem.taxAmount = updatedItem.totalPrice * (value / 100);\r\n        }\r\n        return updatedItem;\r\n      }\r\n      return item;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-4xl mx-auto\">\r\n      <CardContent className=\"p-6\">\r\n        <Typography variant=\"h5\" className=\"mb-6 text-gray-800\">\r\n          {initialData ? 'Rechnung bearbeiten' : 'Neue Rechnung erstellen'}\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" className=\"mb-4\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-6\">\r\n          {/* Kundeninformationen */}\r\n          <Box>\r\n            <Typography variant=\"h6\" className=\"mb-3 text-gray-700\">\r\n              Kundeninformationen\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"customerName\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Kundenname\"\r\n                      fullWidth\r\n                      error={!!errors.customerName}\r\n                      helperText={errors.customerName?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"customerEmail\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"E-Mail\"\r\n                      type=\"email\"\r\n                      fullWidth\r\n                      error={!!errors.customerEmail}\r\n                      helperText={errors.customerEmail?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          {/* Rechnungsdetails */}\r\n          <Box>\r\n            <Typography variant=\"h6\" className=\"mb-3 text-gray-700\">\r\n              Rechnungsdetails\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Beschreibung\"\r\n                      multiline\r\n                      rows={3}\r\n                      fullWidth\r\n                      error={!!errors.description}\r\n                      helperText={errors.description?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Controller\r\n                  name=\"dueDate\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Fälligkeitsdatum\"\r\n                      type=\"date\"\r\n                      fullWidth\r\n                      InputLabelProps={{ shrink: true }}\r\n                      error={!!errors.dueDate}\r\n                      helperText={errors.dueDate?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          {/* Rechnungspositionen */}\r\n          <Box>\r\n            <div className=\"flex justify-between items-center mb-3\">\r\n              <Typography variant=\"h6\" className=\"text-gray-700\">\r\n                Rechnungspositionen\r\n              </Typography>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={addItem}\r\n                className=\"text-blue-600 border-blue-600 hover:bg-blue-50\"\r\n              >\r\n                Position hinzufügen\r\n              </Button>\r\n            </div>\r\n\r\n            {items.map((item, index) => (\r\n              <Card key={item.id} className=\"mb-3 p-4 border border-gray-200\">\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item xs={12} md={4}>\r\n                    <TextField\r\n                      label=\"Bezeichnung\"\r\n                      value={item.name}\r\n                      onChange={(e) => updateItem(item.id, 'name', e.target.value)}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <TextField\r\n                      label=\"Menge\"\r\n                      type=\"number\"\r\n                      value={item.quantity}\r\n                      onChange={(e) => updateItem(item.id, 'quantity', Number(e.target.value))}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <TextField\r\n                      label=\"Einzelpreis\"\r\n                      type=\"number\"\r\n                      value={item.unitPrice}\r\n                      onChange={(e) => updateItem(item.id, 'unitPrice', Number(e.target.value))}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <TextField\r\n                      label=\"Steuersatz (%)\"\r\n                      type=\"number\"\r\n                      value={item.taxRate}\r\n                      onChange={(e) => updateItem(item.id, 'taxRate', Number(e.target.value))}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <div className=\"text-right\">\r\n                      <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                        Gesamt: {formatCurrency(item.totalPrice)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" className=\"text-gray-500\">\r\n                        Steuer: {formatCurrency(item.taxAmount)}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      onClick={() => removeItem(item.id)}\r\n                      className=\"w-full\"\r\n                    >\r\n                      Löschen\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          {/* Beträge */}\r\n          <Box>\r\n            <Typography variant=\"h6\" className=\"mb-3 text-gray-700\">\r\n              Beträge\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={4}>\r\n                <Controller\r\n                  name=\"amount\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Nettobetrag\"\r\n                      type=\"number\"\r\n                      fullWidth\r\n                      error={!!errors.amount}\r\n                      helperText={errors.amount?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Controller\r\n                  name=\"taxAmount\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Steuerbetrag\"\r\n                      type=\"number\"\r\n                      fullWidth\r\n                      error={!!errors.taxAmount}\r\n                      helperText={errors.taxAmount?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Controller\r\n                  name=\"totalAmount\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      label=\"Gesamtbetrag\"\r\n                      type=\"number\"\r\n                      fullWidth\r\n                      disabled\r\n                      error={!!errors.totalAmount}\r\n                      helperText={errors.totalAmount?.message}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          {/* Aktionen */}\r\n          <Box className=\"flex justify-end space-x-3 pt-4\">\r\n            {onCancel && (\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={onCancel}\r\n                disabled={isLoading}\r\n              >\r\n                Abbrechen\r\n              </Button>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={isLoading}\r\n              className=\"bg-blue-600 hover:bg-blue-700\"\r\n            >\r\n              {isLoading ? 'Speichere...' : (initialData ? 'Aktualisieren' : 'Erstellen')}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EInvoicingForm; ","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  LinearProgress,\r\n  Chip\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AttachMoney,\r\n  Receipt,\r\n  Warning,\r\n  CheckCircle\r\n} from '@mui/icons-material';\r\nimport { formatCurrency, formatPercentage } from '../../utils/formatters';\r\nimport { EInvoicingStatistics as EInvoicingStats } from '../../types/invoices';\r\n\r\ninterface EInvoicingStatisticsProps {\r\n  statistics: EInvoicingStats;\r\n  isLoading?: boolean;\r\n}\r\n\r\n/**\r\n * E-Invoicing Statistiken Komponente\r\n * Zeigt Übersicht über Rechnungsstatistiken an\r\n */\r\nexport const EInvoicingStatistics: React.FC<EInvoicingStatisticsProps> = ({\r\n  statistics,\r\n  isLoading = false\r\n}) => {\r\n  const currentMonth = statistics.monthly[statistics.monthly.length - 1];\r\n  const currentYear = statistics.yearly[statistics.yearly.length - 1];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'paid':\r\n        return 'success';\r\n      case 'overdue':\r\n        return 'error';\r\n      case 'open':\r\n        return 'warning';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'paid':\r\n        return <CheckCircle fontSize=\"small\" />;\r\n      case 'overdue':\r\n        return <Warning fontSize=\"small\" />;\r\n      case 'open':\r\n        return <Receipt fontSize=\"small\" />;\r\n      default:\r\n        return <AttachMoney fontSize=\"small\" />;\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box className=\"w-full\">\r\n        <LinearProgress />\r\n        <Typography className=\"mt-4 text-center text-gray-500\">\r\n          Lade Statistiken...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Übersichtskarten */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"h-full\">\r\n            <CardContent className=\"text-center\">\r\n              <AttachMoney className=\"text-blue-600 text-3xl mb-2\" />\r\n              <Typography variant=\"h4\" className=\"font-bold text-gray-800\">\r\n                {formatCurrency(currentMonth?.totalAmount || 0)}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                Monatlicher Umsatz\r\n              </Typography>\r\n              <div className=\"flex items-center justify-center mt-2\">\r\n                <TrendingUp className=\"text-green-600 text-sm mr-1\" />\r\n                <Typography variant=\"caption\" className=\"text-green-600\">\r\n                  +12.5%\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"h-full\">\r\n            <CardContent className=\"text-center\">\r\n              <Receipt className=\"text-green-600 text-3xl mb-2\" />\r\n              <Typography variant=\"h4\" className=\"font-bold text-gray-800\">\r\n                {currentMonth?.paidInvoices || 0}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                Bezahlte Rechnungen\r\n              </Typography>\r\n              <div className=\"flex items-center justify-center mt-2\">\r\n                <CheckCircle className=\"text-green-600 text-sm mr-1\" />\r\n                <Typography variant=\"caption\" className=\"text-green-600\">\r\n                  {formatPercentage((currentMonth?.paidInvoices || 0) / (currentMonth?.totalInvoices || 1))}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"h-full\">\r\n            <CardContent className=\"text-center\">\r\n              <Warning className=\"text-orange-600 text-3xl mb-2\" />\r\n              <Typography variant=\"h4\" className=\"font-bold text-gray-800\">\r\n                {currentMonth?.overdueInvoices || 0}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                Überfällige Rechnungen\r\n              </Typography>\r\n              <div className=\"flex items-center justify-center mt-2\">\r\n                <TrendingDown className=\"text-orange-600 text-sm mr-1\" />\r\n                <Typography variant=\"caption\" className=\"text-orange-600\">\r\n                  {formatCurrency(currentMonth?.overdueAmount || 0)}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"h-full\">\r\n            <CardContent className=\"text-center\">\r\n              <Receipt className=\"text-blue-600 text-3xl mb-2\" />\r\n              <Typography variant=\"h4\" className=\"font-bold text-gray-800\">\r\n                {currentMonth?.totalInvoices || 0}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                Gesamte Rechnungen\r\n              </Typography>\r\n              <div className=\"flex items-center justify-center mt-2\">\r\n                <Typography variant=\"caption\" className=\"text-gray-500\">\r\n                  Ø {formatCurrency(currentMonth?.averageAmount || 0)}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Detaillierte Statistiken */}\r\n      <Grid container spacing={3}>\r\n        {/* Monatliche Entwicklung */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" className=\"mb-4 text-gray-800\">\r\n                Monatliche Entwicklung\r\n              </Typography>\r\n              <div className=\"space-y-3\">\r\n                {statistics.monthly.slice(-6).map((month, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <div>\r\n                      <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                                                 {new Date().toLocaleDateString('de-DE', { month: 'short', year: 'numeric' })}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" className=\"text-gray-500\">\r\n                        {month.totalInvoices} Rechnungen\r\n                      </Typography>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Typography variant=\"body2\" className=\"font-semibold\">\r\n                        {formatCurrency(month.totalAmount)}\r\n                      </Typography>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <Chip\r\n                          label={`${month.paidInvoices}/${month.totalInvoices}`}\r\n                          size=\"small\"\r\n                          color=\"success\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Chip\r\n                          label={month.overdueInvoices.toString()}\r\n                          size=\"small\"\r\n                          color=\"error\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Top Kunden */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" className=\"mb-4 text-gray-800\">\r\n                Top Kunden\r\n              </Typography>\r\n              <div className=\"space-y-3\">\r\n                {statistics.topCustomers.slice(0, 5).map((customer, index) => (\r\n                  <div key={customer.customerId} className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                        <Typography variant=\"caption\" className=\"text-blue-600 font-semibold\">\r\n                          {index + 1}\r\n                        </Typography>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"body2\" className=\"font-medium\">\r\n                          {customer.customerName}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" className=\"text-gray-500\">\r\n                          {customer.invoiceCount} Rechnungen\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                    <Typography variant=\"body2\" className=\"font-semibold\">\r\n                      {formatCurrency(customer.totalAmount)}\r\n                    </Typography>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Zahlungsmethoden */}\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className=\"mb-4 text-gray-800\">\r\n            Zahlungsmethoden\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {statistics.paymentMethods.map((method, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <div className=\"p-3 border border-gray-200 rounded-lg\">\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <Typography variant=\"body2\" className=\"font-medium\">\r\n                      {method.method}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={method.count.toString()}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <Typography variant=\"h6\" className=\"font-bold text-gray-800\">\r\n                    {formatCurrency(method.totalAmount)}\r\n                  </Typography>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={(method.totalAmount / (currentMonth?.totalAmount || 1)) * 100}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Jahresvergleich */}\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className=\"mb-4 text-gray-800\">\r\n            Jahresvergleich\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"subtitle1\" className=\"mb-2 text-gray-700\">\r\n                Aktuelles Jahr\r\n              </Typography>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>Gesamtumsatz:</span>\r\n                  <span className=\"font-semibold\">{formatCurrency(currentYear?.totalAmount || 0)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Rechnungen:</span>\r\n                  <span className=\"font-semibold\">{currentYear?.totalInvoices || 0}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Durchschnitt:</span>\r\n                  <span className=\"font-semibold\">{formatCurrency(currentYear?.averageAmount || 0)}</span>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"subtitle1\" className=\"mb-2 text-gray-700\">\r\n                Vorjahr\r\n              </Typography>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>Gesamtumsatz:</span>\r\n                  <span className=\"font-semibold\">{formatCurrency((currentYear?.totalAmount || 0) * 0.85)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Rechnungen:</span>\r\n                  <span className=\"font-semibold\">{Math.floor((currentYear?.totalInvoices || 0) * 0.9)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Durchschnitt:</span>\r\n                  <span className=\"font-semibold\">{formatCurrency((currentYear?.averageAmount || 0) * 0.95)}</span>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EInvoicingStatistics; ","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Alert,\r\n  Box,\r\n  Chip,\r\n  Button,\r\n  Collapse\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle,\r\n  Error,\r\n  Warning,\r\n  ExpandMore,\r\n  ExpandLess,\r\n  Refresh\r\n} from '@mui/icons-material';\r\nimport { EInvoicingValidationResult } from '../../types/invoices';\r\n\r\ninterface EInvoicingValidationProps {\r\n  validationResult: EInvoicingValidationResult;\r\n  onRevalidate?: () => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\n/**\r\n * E-Invoicing Validierung Komponente\r\n * Zeigt Validierungsergebnisse für elektronische Rechnungen an\r\n */\r\nexport const EInvoicingValidation: React.FC<EInvoicingValidationProps> = ({\r\n  validationResult,\r\n  onRevalidate,\r\n  isLoading = false\r\n}) => {\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  const getValidationIcon = (type: 'error' | 'warning' | 'success') => {\r\n    switch (type) {\r\n      case 'error':\r\n        return <Error color=\"error\" />;\r\n      case 'warning':\r\n        return <Warning color=\"warning\" />;\r\n      case 'success':\r\n        return <CheckCircle color=\"success\" />;\r\n      default:\r\n        return <CheckCircle color=\"success\" />;\r\n    }\r\n  };\r\n\r\n  const getValidationColor = (type: 'error' | 'warning' | 'success') => {\r\n    switch (type) {\r\n      case 'error':\r\n        return 'error';\r\n      case 'warning':\r\n        return 'warning';\r\n      case 'success':\r\n        return 'success';\r\n      default:\r\n        return 'success';\r\n    }\r\n  };\r\n\r\n  const handleToggleExpanded = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleRevalidate = () => {\r\n    if (onRevalidate) {\r\n      onRevalidate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardContent className=\"p-4\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Typography variant=\"h6\" className=\"text-gray-800\">\r\n              Rechnungsvalidierung\r\n            </Typography>\r\n            <Chip\r\n              label={validationResult.isValid ? 'Gültig' : 'Ungültig'}\r\n              color={validationResult.isValid ? 'success' : 'error'}\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {onRevalidate && (\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                onClick={handleRevalidate}\r\n                disabled={isLoading}\r\n                startIcon={<Refresh />}\r\n              >\r\n                Neu validieren\r\n              </Button>\r\n            )}\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              onClick={handleToggleExpanded}\r\n              endIcon={expanded ? <ExpandLess /> : <ExpandMore />}\r\n            >\r\n              {expanded ? 'Einklappen' : 'Ausklappen'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Gesamtstatus */}\r\n        {validationResult.isValid ? (\r\n          <Alert severity=\"success\" className=\"mb-4\">\r\n            <Typography variant=\"body2\">\r\n              Die Rechnung ist gültig und entspricht allen Anforderungen.\r\n            </Typography>\r\n          </Alert>\r\n        ) : (\r\n          <Alert severity=\"error\" className=\"mb-4\">\r\n            <Typography variant=\"body2\">\r\n              Die Rechnung enthält Fehler und muss korrigiert werden.\r\n            </Typography>\r\n          </Alert>\r\n        )}\r\n\r\n        <Collapse in={expanded}>\r\n          {/* Fehler */}\r\n          {validationResult.errors.length > 0 && (\r\n            <Box className=\"mb-4\">\r\n              <Typography variant=\"subtitle1\" className=\"mb-2 text-red-600 font-semibold\">\r\n                Fehler ({validationResult.errors.length})\r\n              </Typography>\r\n              <List dense className=\"bg-red-50 rounded-lg\">\r\n                {validationResult.errors.map((error, index) => (\r\n                  <ListItem key={index} className=\"py-1\">\r\n                    <ListItemIcon className=\"min-w-0 mr-2\">\r\n                      {getValidationIcon('error')}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={error}\r\n                      primaryTypographyProps={{\r\n                        variant: 'body2',\r\n                        className: 'text-red-700'\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Box>\r\n          )}\r\n\r\n          {/* Warnungen */}\r\n          {validationResult.warnings.length > 0 && (\r\n            <Box className=\"mb-4\">\r\n              <Typography variant=\"subtitle1\" className=\"mb-2 text-orange-600 font-semibold\">\r\n                Warnungen ({validationResult.warnings.length})\r\n              </Typography>\r\n              <List dense className=\"bg-orange-50 rounded-lg\">\r\n                {validationResult.warnings.map((warning, index) => (\r\n                  <ListItem key={index} className=\"py-1\">\r\n                    <ListItemIcon className=\"min-w-0 mr-2\">\r\n                      {getValidationIcon('warning')}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={warning}\r\n                      primaryTypographyProps={{\r\n                        variant: 'body2',\r\n                        className: 'text-orange-700'\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Box>\r\n          )}\r\n\r\n          {/* Erfolgreiche Validierungen */}\r\n          {validationResult.errors.length === 0 && validationResult.warnings.length === 0 && (\r\n            <Box>\r\n              <Typography variant=\"subtitle1\" className=\"mb-2 text-green-600 font-semibold\">\r\n                Alle Prüfungen erfolgreich\r\n              </Typography>\r\n              <List dense className=\"bg-green-50 rounded-lg\">\r\n                <ListItem className=\"py-1\">\r\n                  <ListItemIcon className=\"min-w-0 mr-2\">\r\n                    {getValidationIcon('success')}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Rechnungsformat ist korrekt\"\r\n                    primaryTypographyProps={{\r\n                      variant: 'body2',\r\n                      className: 'text-green-700'\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem className=\"py-1\">\r\n                  <ListItemIcon className=\"min-w-0 mr-2\">\r\n                    {getValidationIcon('success')}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Alle Pflichtfelder sind ausgefüllt\"\r\n                    primaryTypographyProps={{\r\n                      variant: 'body2',\r\n                      className: 'text-green-700'\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem className=\"py-1\">\r\n                  <ListItemIcon className=\"min-w-0 mr-2\">\r\n                    {getValidationIcon('success')}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Steuerberechnungen sind korrekt\"\r\n                    primaryTypographyProps={{\r\n                      variant: 'body2',\r\n                      className: 'text-green-700'\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem className=\"py-1\">\r\n                  <ListItemIcon className=\"min-w-0 mr-2\">\r\n                    {getValidationIcon('success')}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Kundeninformationen sind vollständig\"\r\n                    primaryTypographyProps={{\r\n                      variant: 'body2',\r\n                      className: 'text-green-700'\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Box>\r\n          )}\r\n        </Collapse>\r\n\r\n        {/* Zusammenfassung */}\r\n        <Box className=\"mt-4 pt-4 border-t border-gray-200\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"flex items-center space-x-1\">\r\n                <Error color=\"error\" fontSize=\"small\" />\r\n                <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                  {validationResult.errors.length} Fehler\r\n                </Typography>\r\n              </div>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <Warning color=\"warning\" fontSize=\"small\" />\r\n                <Typography variant=\"body2\" className=\"text-gray-600\">\r\n                  {validationResult.warnings.length} Warnungen\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <Chip\r\n              label={validationResult.isValid ? 'Bereit zum Versenden' : 'Korrektur erforderlich'}\r\n              color={validationResult.isValid ? 'success' : 'error'}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EInvoicingValidation; ","import React, { useState, useEffect } from 'react';\r\nimport { Box, Tabs, Tab, Typography, Paper, Container } from '@mui/material';\r\nimport { TabPanel } from '../../components/common/TabPanel';\r\nimport EInvoicingList from './EInvoicingList';\r\nimport EInvoicingForm from './EInvoicingForm';\r\nimport EInvoicingStatistics from './EInvoicingStatistics';\r\nimport EInvoicingValidation from './EInvoicingValidation';\r\n\r\ninterface EInvoicingPageProps {\r\n  // Props für die e-Invoicing-Seite\r\n}\r\n\r\nexport const EInvoicingPage: React.FC<EInvoicingPageProps> = () => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ width: '100%', mt: 2 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          E-Invoicing Management\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\r\n          ZUGFeRD/XRechnung e-Invoicing mit Mustangproject und Claude Flow Integration\r\n        </Typography>\r\n\r\n        <Paper sx={{ width: '100%', mt: 3 }}>\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            <Tab label=\"E-Rechnungen\" />\r\n            <Tab label=\"Neue e-Rechnung\" />\r\n            <Tab label=\"Validierung\" />\r\n            <Tab label=\"Statistiken\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={tabValue} index={0}>\r\n            <EInvoicingList />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabValue} index={1}>\r\n            <EInvoicingForm \r\n              onSubmit={async (data) => {\r\n                console.log('Neue Rechnung:', data);\r\n                // Hier würde die API-Integration erfolgen\r\n              }}\r\n              onCancel={() => setTabValue(0)}\r\n            />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabValue} index={2}>\r\n            <EInvoicingValidation \r\n              validationResult={{\r\n                isValid: true,\r\n                errors: [],\r\n                warnings: []\r\n              }}\r\n            />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabValue} index={3}>\r\n            <EInvoicingStatistics \r\n              statistics={{\r\n                monthly: [],\r\n                yearly: [],\r\n                topCustomers: [],\r\n                paymentMethods: []\r\n              }}\r\n            />\r\n          </TabPanel>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EInvoicingPage; "],"names":["useState","useEffect","jsx","jsxs","EyeOutlined","DownloadOutlined","DeleteOutlined","pagination","SearchOutlined","PlusOutlined","Table","yup.object","yup.string","yup.number","yupResolver","Card","Button","CheckCircle","Warning","Error","Refresh"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,EAAE,WAAW;AACnB,MAAM,EAAE,WAAW;AACnB,MAAM,EAAE,gBAAgB;AAMxB,MAAM,iBAAgD,MAAM;AAC1D,QAAM,CAAC,UAAU,WAAW,IAAIA,aAAAA,SAA2B,CAAA,CAAE;AAC7D,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,KAAK;AAC5C,QAAM,CAAC,QAAQ,SAAS,IAAIA,sBAAwB;AAAA,IAClD,WAAW;AAAA,IACX,SAAS;AAAA,EAAA,CACV;AACD,QAAM,CAAC,YAAY,aAAa,IAAIA,sBAAS;AAAA,IAC3C,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,EAAA,CACR;AAEDC,eAAAA,UAAU,MAAM;AACd,kBAAA;AAAA,EACF,GAAG,CAAC,QAAQ,WAAW,SAAS,WAAW,QAAQ,CAAC;AAEpD,QAAM,gBAAgB,MAAY;AAChC,eAAW,IAAI;AACf,QAAI;AACF,YAAM,OAAO,MAAM,cAAc,YAAY,MAAM;AACnD,kBAAY,IAAI;AAChB,oBAAc,UAAS,iCAAK,OAAL,EAAW,OAAO,KAAK,SAAS;AAAA,IACzD,SAAS,OAAO;AACd,cAAQ,MAAM,uCAAuC,KAAK;AAAA,IAC5D,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAO,cAAsB;AAClD,QAAI;AACF,YAAM,OAAO,MAAM,cAAc,gBAAgB,SAAS;AAC1D,YAAM,MAAM,OAAO,IAAI,gBAAgB,IAAI;AAC3C,YAAM,IAAI,SAAS,cAAc,GAAG;AACpC,QAAE,OAAO;AACT,QAAE,WAAW,WAAW,SAAS;AACjC,eAAS,KAAK,YAAY,CAAC;AAC3B,QAAE,MAAA;AACF,aAAO,IAAI,gBAAgB,GAAG;AAC9B,eAAS,KAAK,YAAY,CAAC;AAAA,IAC7B,SAAS,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AAAA,IACnD;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,YAAQ,QAAA;AAAA,MACN,KAAK;AAAQ,eAAO;AAAA,MACpB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAS,eAAO;AAAA,MACrB;AAAS,eAAO;AAAA,IAAA;AAAA,EAEpB;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,YAAQ,QAAA;AAAA,MACN,KAAK;AAAQ,eAAO;AAAA,MACpB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAS,eAAO;AAAA,MACrB;AAAS,eAAO;AAAA,IAAA;AAAA,EAEpB;AAEA,QAAM,UAAU;AAAA,IACd;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ,CAAC,SAAiBC,kCAAAA,IAAC,YAAQ,UAAA,KAAA,CAAK;AAAA,IAAA;AAAA,IAE1C;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ,CAAC,QAAgB,WACvB,eAAe,QAAQ,OAAO,QAAQ;AAAA,IAAA;AAAA,IAE1C;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ,CAAC,WACPA,kCAAAA,IAAC,KAAA,EAAI,OAAO,eAAe,MAAM,GAC9B,UAAA,eAAe,MAAM,EAAA,CACxB;AAAA,IAAA;AAAA,IAGJ;AAAA,MACE,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MACL,OAAO;AAAA,MACP,QAAQ,CAAC,SAAiB,WAAW,IAAI;AAAA,IAAA;AAAA,IAE3C;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ,CAAC,MAAc,WACrBC,kCAAAA,KAAC,OAAA,EAAM,MAAK,SACV,UAAA;AAAA,QAAAD,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,4CAAOE,WAAA,EAAY;AAAA,YACnB,SAAS,MAAM,WAAW,OAAO,SAAS;AAAA,YAC1C,OAAM;AAAA,UAAA;AAAA,QAAA;AAAA,QAERF,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,4CAAOG,WAAA,EAAiB;AAAA,YACxB,SAAS,MAAM,eAAe,OAAO,SAAS;AAAA,YAC9C,OAAM;AAAA,UAAA;AAAA,QAAA;AAAA,QAERH,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,QAAM;AAAA,YACN,4CAAOI,WAAA,EAAe;AAAA,YACtB,SAAS,MAAM,aAAa,OAAO,SAAS;AAAA,YAC5C,OAAM;AAAA,UAAA;AAAA,QAAA;AAAA,MACR,EAAA,CACF;AAAA,IAAA;AAAA,EAEJ;AAGF,QAAM,aAAa,CAAC,cAAsB;AAExC,YAAQ,IAAI,wBAAwB,SAAS;AAAA,EAC/C;AAEA,QAAM,eAAe,CAAC,cAAsB;AAE1C,YAAQ,IAAI,uBAAuB,SAAS;AAAA,EAC9C;AAEA,QAAM,eAAe,CAAC,UAAkB;AACtC,cAAU,UAAS,iCAAK,OAAL,EAAW,QAAQ,QAAQ;AAAA,EAChD;AAEA,QAAM,qBAAqB,CAAC,UAAkB;AAC5C,cAAU,UAAS,iCAAK,OAAL,EAAW,QAAQ,QAAyB;AAAA,EACjE;AAEA,QAAM,wBAAwB,CAAC,UAAe;AAC5C,QAAI,OAAO;AACT,gBAAU,CAAA,SAAA;;AAAS,gDACd,OADc;AAAA,UAEjB,YAAW,WAAM,CAAC,MAAP,mBAAU;AAAA,UACrB,UAAS,WAAM,CAAC,MAAP,mBAAU;AAAA,QAAY;AAAA,OAC/B;AAAA,IACJ,OAAO;AACL,gBAAU,CAAA,SAAS,iCACd,OADc;AAAA,QAEjB,WAAW;AAAA,QACX,SAAS;AAAA,MAAA,EACT;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,oBAAoB,CAACC,gBAAoB;AAC7C,kBAAc,CAAA,SAAS,iCAClB,OADkB;AAAA,MAErB,SAASA,YAAW;AAAA,MACpB,UAAUA,YAAW;AAAA,IAAA,EACrB;AAAA,EACJ;AAGA,QAAM,aAAa;AAAA,IACjB,eAAe,SAAS;AAAA,IACxB,aAAa,SAAS,OAAO,CAAC,KAAK,QAAQ,MAAM,IAAI,QAAQ,CAAC;AAAA,IAC9D,cAAc,SAAS,OAAO,SAAO,IAAI,WAAW,MAAM,EAAE;AAAA,IAC5D,iBAAiB,SAAS,OAAO,SAAO,IAAI,WAAW,MAAM,EAAE;AAAA,EAAA;AAGjE,SACEJ,kCAAAA,KAAC,OAAA,EAAI,WAAU,OAEb,UAAA;AAAA,IAAAD,kCAAAA,IAAC,MAAA,EAAK,MAAK,SAAQ,WAAU,QAC3B,UAAAC,kCAAAA,KAAC,KAAA,EAAI,QAAQ,IACX,UAAA;AAAA,MAAAD,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAM;AAAA,UACN,OAAO,WAAW;AAAA,UAClB,QAAO;AAAA,QAAA;AAAA,MAAA,GAEX;AAAA,MACAA,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAM;AAAA,UACN,OAAO,WAAW;AAAA,UAClB,WAAW;AAAA,UACX,QAAO;AAAA,QAAA;AAAA,MAAA,GAEX;AAAA,MACAA,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAM;AAAA,UACN,OAAO,WAAW;AAAA,UAClB,QAAO;AAAA,QAAA;AAAA,MAAA,GAEX;AAAA,MACAA,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAM;AAAA,UACN,OAAO,WAAW;AAAA,UAClB,QAAO;AAAA,QAAA;AAAA,MAAA,EACT,CACF;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,IAGAA,kCAAAA,IAAC,MAAA,EAAK,MAAK,SAAQ,WAAU,QAC3B,UAAAC,kCAAAA,KAAC,KAAA,EAAI,QAAQ,IAAI,OAAM,UACrB,UAAA;AAAA,MAAAD,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,aAAY;AAAA,UACZ,UAAU;AAAA,UACV,mDAAcM,SAAA,CAAA,CAAe;AAAA,QAAA;AAAA,MAAA,GAEjC;AAAA,MACAN,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAC,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,aAAY;AAAA,UACZ,YAAU;AAAA,UACV,OAAO,EAAE,OAAO,OAAA;AAAA,UAChB,UAAU;AAAA,UAEV,UAAA;AAAA,YAAAD,kCAAAA,IAAC,QAAA,EAAO,OAAM,QAAO,UAAA,WAAO;AAAA,YAC5BA,kCAAAA,IAAC,QAAA,EAAO,OAAM,WAAU,UAAA,cAAU;AAAA,YAClCA,kCAAAA,IAAC,QAAA,EAAO,OAAM,WAAU,UAAA,cAAU;AAAA,YAClCA,kCAAAA,IAAC,QAAA,EAAO,OAAM,SAAQ,UAAA,UAAA,CAAO;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA,GAEjC;AAAA,MACAA,kCAAAA,IAAC,KAAA,EAAI,MAAM,GACT,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,aAAa,CAAC,cAAc,UAAU;AAAA,UACtC,UAAU;AAAA,UACV,OAAO,EAAE,OAAO,OAAA;AAAA,QAAO;AAAA,MAAA,GAE3B;AAAA,MACAA,sCAAC,KAAA,EAAI,MAAM,GACT,iDAAC,OAAA,EACC,UAAA;AAAA,QAAAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,4CAAOO,WAAA,EAAa;AAAA,YACpB,SAAS,MAAM,QAAQ,IAAI,2BAA2B;AAAA,YACvD,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,QAGDP,kCAAAA,IAAC,QAAA,EAAO,SAAS,eAAe,UAAA,gBAAA,CAEhC;AAAA,MAAA,EAAA,CACF,EAAA,CACF;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,0CAGC,MAAA,EACC,UAAAA,kCAAAA;AAAAA,MAACQ;AAAAA,MAAA;AAAA,QACC;AAAA,QACA,YAAY;AAAA,QACZ,QAAO;AAAA,QACP;AAAA,QACA,YAAY;AAAA,UACV,SAAS,WAAW;AAAA,UACpB,UAAU,WAAW;AAAA,UACrB,OAAO,WAAW;AAAA,UAClB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,UACjB,WAAW,CAAC,OAAO,UACjB,GAAG,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,QAAQ,KAAK;AAAA,QAAA;AAAA,QAExC,UAAU;AAAA,QACV,QAAQ,EAAE,GAAG,IAAA;AAAA,QACb,MAAK;AAAA,MAAA;AAAA,IAAA,EACP,CACF;AAAA,EAAA,GACF;AAEJ;AChSA,MAAM,SAASC,SAAW;AAAA,EACxB,YAAYC,SAAI,EAAS,SAAS,wBAAwB;AAAA,EAC1D,cAAcA,SAAI,EAAS,SAAS,6BAA6B;AAAA,EACjE,eAAeA,SAAI,EAAS,MAAM,kBAAkB,EAAE,SAAS,yBAAyB;AAAA,EACxF,QAAQC,SAAI,EAAS,SAAS,0BAA0B,EAAE,SAAS,yBAAyB;AAAA,EAC5F,WAAWA,SAAI,EAAS,IAAI,GAAG,sCAAsC,EAAE,SAAS,+BAA+B;AAAA,EAC/G,aAAaA,SAAI,EAAS,SAAS,gCAAgC,EAAE,SAAS,+BAA+B;AAAA,EAC7G,UAAUD,SAAI,EAAS,SAAS,0BAA0B;AAAA,EAC1D,aAAaA,SAAI,EAAS,SAAS,+BAA+B;AAAA,EAClE,SAASA,WAAa,SAAS,mCAAmC;AACpE,CAAC;AAaM,MAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AACJ,QAAM,CAAC,OAAO,QAAQ,IAAIZ,aAAAA,UAAwB,2CAAa,UAAS,EAAE;AAC1E,QAAM,CAAC,OAAO,QAAQ,IAAIA,aAAAA,SAAwB,IAAI;AAEtD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,WAAW,EAAE,OAAA;AAAA,IACb;AAAA,IACA;AAAA,EAAA,IACE,QAAQ;AAAA,IACV,UAAUc,EAAY,MAAM;AAAA,IAC5B,eAAe;AAAA,MACb,aAAY,2CAAa,eAAc;AAAA,MACvC,eAAc,2CAAa,iBAAgB;AAAA,MAC3C,gBAAe,2CAAa,kBAAiB;AAAA,MAC7C,SAAQ,2CAAa,WAAU;AAAA,MAC/B,YAAW,2CAAa,cAAa;AAAA,MACrC,cAAa,2CAAa,gBAAe;AAAA,MACzC,WAAU,2CAAa,aAAY;AAAA,MACnC,cAAa,2CAAa,gBAAe;AAAA,MACzC,UAAS,2CAAa,aAAW,oBAAI,QAAO,cAAc,MAAM,GAAG,EAAE,CAAC;AAAA;AAAA,IAAA;AAAA,EAExE,CACD;AAED,QAAM,gBAAgB,MAAM,QAAQ;AACpC,QAAM,mBAAmB,MAAM,WAAW;AAG1C,QAAM,UAAU,MAAM;AACpB,UAAM,QAAQ,gBAAgB;AAC9B,aAAS,eAAe,KAAK;AAAA,EAC/B,GAAG,CAAC,eAAe,kBAAkB,QAAQ,CAAC;AAE9C,QAAM,mBAAmB,CAAO,SAAc;AAC5C,QAAI;AACF,eAAS,IAAI;AACb,YAAM,SAAS,iCACV,OADU;AAAA,QAEb;AAAA,MAAA,EACD;AAAA,IACH,SAAS,KAAK;AACZ,eAAS,eAAe,QAAQ,IAAI,UAAU,oCAAoC;AAAA,IACpF;AAAA,EACF;AAEA,QAAM,UAAU,MAAM;AACpB,UAAM,UAAuB;AAAA,MAC3B,IAAI,KAAK,IAAA,EAAM,SAAA;AAAA,MACf,MAAM;AAAA,MACN,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,SAAS;AAAA;AAAA,MACT,WAAW;AAAA,IAAA;AAEb,aAAS,CAAC,GAAG,OAAO,OAAO,CAAC;AAAA,EAC9B;AAEA,QAAM,aAAa,CAAC,OAAe;AACjC,aAAS,MAAM,OAAO,CAAA,SAAQ,KAAK,OAAO,EAAE,CAAC;AAAA,EAC/C;AAEA,QAAM,aAAa,CAAC,IAAY,OAA0B,UAAe;AACvE,aAAS,MAAM,IAAI,CAAA,SAAQ;AACzB,UAAI,KAAK,OAAO,IAAI;AAClB,cAAM,cAAc,iCAAK,OAAL,EAAW,CAAC,KAAK,GAAG,MAAA;AAExC,YAAI,UAAU,cAAc,UAAU,aAAa;AACjD,sBAAY,aAAa,YAAY,WAAW,YAAY;AAC5D,sBAAY,YAAY,YAAY,cAAc,YAAY,UAAU;AAAA,QAC1E;AACA,YAAI,UAAU,WAAW;AACvB,sBAAY,YAAY,YAAY,cAAc,QAAQ;AAAA,QAC5D;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC,CAAC;AAAA,EACJ;AAEA,+CACGC,QAAA,EAAK,WAAU,4BACd,UAAAZ,kCAAAA,KAAC,aAAA,EAAY,WAAU,OACrB,UAAA;AAAA,IAAAD,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,sBAChC,UAAA,cAAc,wBAAwB,0BAAA,CACzC;AAAA,IAEC,SACCA,kCAAAA,IAAC,OAAA,EAAM,UAAS,SAAQ,WAAU,QAC/B,UAAA,OACH;AAAA,2CAGD,QAAA,EAAK,UAAU,aAAa,gBAAgB,GAAG,WAAU,aAExD,UAAA;AAAA,MAAAC,uCAAC,KAAA,EACC,UAAA;AAAA,QAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,uBAExD;AAAA,QACAC,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,UAAAD,sCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,WAAS;AAAA,oBACT,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,iBAAP,mBAAqB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YACnC;AAAA,UAAA,GAGN;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,MAAK;AAAA,oBACL,WAAS;AAAA,oBACT,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,kBAAP,mBAAsB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YACpC;AAAA,UAAA,EAEJ,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,4CAEC,SAAA,EAAQ;AAAA,6CAGR,KAAA,EACC,UAAA;AAAA,QAAAA,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,oBAExD;AAAA,QACAC,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,UAAAD,sCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,WAAS;AAAA,oBACT,MAAM;AAAA,oBACN,WAAS;AAAA,oBACT,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,gBAAP,mBAAoB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YAClC;AAAA,UAAA,GAGN;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,MAAK;AAAA,oBACL,WAAS;AAAA,oBACT,iBAAiB,EAAE,QAAQ,KAAA;AAAA,oBAC3B,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,YAAP,mBAAgB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YAC9B;AAAA,UAAA,EAEJ,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,4CAEC,SAAA,EAAQ;AAAA,6CAGR,KAAA,EACC,UAAA;AAAA,QAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,0CACb,UAAA;AAAA,UAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,iBAAgB,UAAA,uBAEnD;AAAA,UACAA,kCAAAA;AAAAA,YAACc;AAAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,SAAS;AAAA,cACT,WAAU;AAAA,cACX,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAED,GACF;AAAA,QAEC,MAAM,IAAI,CAAC,MAAM,gDACfD,QAAA,EAAmB,WAAU,mCAC5B,UAAAZ,kCAAAA,KAAC,QAAK,WAAS,MAAC,SAAS,GAAG,YAAW,UACrC,UAAA;AAAA,UAAAD,sCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO,KAAK;AAAA,cACZ,UAAU,CAAC,MAAM,WAAW,KAAK,IAAI,QAAQ,EAAE,OAAO,KAAK;AAAA,cAC3D,WAAS;AAAA,YAAA;AAAA,UAAA,GAEb;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GACpB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,OAAO,KAAK;AAAA,cACZ,UAAU,CAAC,MAAM,WAAW,KAAK,IAAI,YAAY,OAAO,EAAE,OAAO,KAAK,CAAC;AAAA,cACvE,WAAS;AAAA,YAAA;AAAA,UAAA,GAEb;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GACpB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,OAAO,KAAK;AAAA,cACZ,UAAU,CAAC,MAAM,WAAW,KAAK,IAAI,aAAa,OAAO,EAAE,OAAO,KAAK,CAAC;AAAA,cACxE,WAAS;AAAA,YAAA;AAAA,UAAA,GAEb;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GACpB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,OAAO,KAAK;AAAA,cACZ,UAAU,CAAC,MAAM,WAAW,KAAK,IAAI,WAAW,OAAO,EAAE,OAAO,KAAK,CAAC;AAAA,cACtE,WAAS;AAAA,YAAA;AAAA,UAAA,GAEb;AAAA,UACAA,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,GAAG,IAAI,GACpB,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,cACb,UAAA;AAAA,YAAAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA;AAAA,cAAA;AAAA,cAC3C,eAAe,KAAK,UAAU;AAAA,YAAA,GACzC;AAAA,YACAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA;AAAA,cAAA;AAAA,cAC3C,eAAe,KAAK,SAAS;AAAA,YAAA,EAAA,CACxC;AAAA,UAAA,EAAA,CACF,EAAA,CACF;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAD,kCAAAA;AAAAA,YAACc;AAAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,OAAM;AAAA,cACN,SAAS,MAAM,WAAW,KAAK,EAAE;AAAA,cACjC,WAAU;AAAA,cACX,UAAA;AAAA,YAAA;AAAA,UAAA,EAED,CACF;AAAA,QAAA,GACF,EAAA,GA1DS,KAAK,EA2DhB,CACD;AAAA,MAAA,GACH;AAAA,4CAEC,SAAA,EAAQ;AAAA,6CAGR,KAAA,EACC,UAAA;AAAA,QAAAd,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,WAExD;AAAA,QACAC,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,UAAAD,sCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,MAAK;AAAA,oBACL,WAAS;AAAA,oBACT,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,WAAP,mBAAe;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YAC7B;AAAA,UAAA,GAGN;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,MAAK;AAAA,oBACL,WAAS;AAAA,oBACT,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,cAAP,mBAAkB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YAChC;AAAA,UAAA,GAGN;AAAA,gDACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL;AAAA,cACA,QAAQ,CAAC,EAAE,MAAA;;AACTA,yDAAAA;AAAAA,kBAAC;AAAA,kBAAA,iCACK,QADL;AAAA,oBAEC,OAAM;AAAA,oBACN,MAAK;AAAA,oBACL,WAAS;AAAA,oBACT,UAAQ;AAAA,oBACR,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,aAAY,YAAO,gBAAP,mBAAoB;AAAA,kBAAA;AAAA,gBAAA;AAAA;AAAA,YAClC;AAAA,UAAA,EAEJ,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,MAGAC,kCAAAA,KAAC,KAAA,EAAI,WAAU,mCACZ,UAAA;AAAA,QAAA,YACCD,kCAAAA;AAAAA,UAACc;AAAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACX,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,QAIHd,kCAAAA;AAAAA,UAACc;AAAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,UAAU;AAAA,YACV,WAAU;AAAA,YAET,UAAA,YAAY,iBAAkB,cAAc,kBAAkB;AAAA,UAAA;AAAA,QAAA;AAAA,MACjE,EAAA,CACF;AAAA,IAAA,EAAA,CACF;AAAA,EAAA,EAAA,CACF,EAAA,CACF;AAEJ;AChXO,MAAM,uBAA4D,CAAC;AAAA,EACxE;AAAA,EACA,YAAY;AACd,MAAM;AACJ,QAAM,eAAe,WAAW,QAAQ,WAAW,QAAQ,SAAS,CAAC;AACrE,QAAM,cAAc,WAAW,OAAO,WAAW,OAAO,SAAS,CAAC;AA4BlE,MAAI,WAAW;AACb,WACEb,kCAAAA,KAAC,KAAA,EAAI,WAAU,UACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,gBAAA,EAAe;AAAA,MAChBA,kCAAAA,IAAC,YAAA,EAAW,WAAU,kCAAiC,UAAA,sBAAA,CAEvD;AAAA,IAAA,GACF;AAAA,EAEJ;AAEA,SACEC,kCAAAA,KAAC,OAAA,EAAI,WAAU,aAEb,UAAA;AAAA,IAAAA,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,MAAAD,kCAAAA,IAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAC5B,UAAAA,kCAAAA,IAACa,UAAK,WAAU,UACd,UAAAZ,uCAAC,aAAA,EAAY,WAAU,eACrB,UAAA;AAAA,QAAAD,kCAAAA,IAAC,aAAA,EAAY,WAAU,8BAAA,CAA8B;AAAA,QACrDA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,2BAChC,UAAA,gBAAe,6CAAc,gBAAe,CAAC,EAAA,CAChD;AAAA,8CACC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA,sBAEtD;AAAA,QACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,UAAAD,kCAAAA,IAAC,YAAA,EAAW,WAAU,8BAAA,CAA8B;AAAA,gDACnD,YAAA,EAAW,SAAQ,WAAU,WAAU,kBAAiB,UAAA,SAAA,CAEzD;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CACF,GACF,GACF;AAAA,4CAEC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAC5B,gDAACa,QAAA,EAAK,WAAU,UACd,UAAAZ,uCAAC,aAAA,EAAY,WAAU,eACrB,UAAA;AAAA,QAAAD,kCAAAA,IAAC,SAAA,EAAQ,WAAU,+BAAA,CAA+B;AAAA,QAClDA,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,2BAChC,WAAA,6CAAc,iBAAgB,EAAA,CACjC;AAAA,8CACC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA,uBAEtD;AAAA,QACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,UAAAD,kCAAAA,IAACe,iBAAA,EAAY,WAAU,8BAAA,CAA8B;AAAA,UACrDf,kCAAAA,IAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,kBACrC,UAAA,mBAAkB,6CAAc,iBAAgB,OAAM,6CAAc,kBAAiB,EAAE,EAAA,CAC1F;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CACF,GACF,GACF;AAAA,4CAEC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAC5B,gDAACa,QAAA,EAAK,WAAU,UACd,UAAAZ,uCAAC,aAAA,EAAY,WAAU,eACrB,UAAA;AAAA,QAAAD,kCAAAA,IAACgB,aAAA,EAAQ,WAAU,gCAAA,CAAgC;AAAA,QACnDhB,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,2BAChC,WAAA,6CAAc,oBAAmB,EAAA,CACpC;AAAA,8CACC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA,0BAEtD;AAAA,QACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,UAAAD,kCAAAA,IAAC,cAAA,EAAa,WAAU,+BAAA,CAA+B;AAAA,UACvDA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,mBACrC,UAAA,gBAAe,6CAAc,kBAAiB,CAAC,EAAA,CAClD;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CACF,GACF,GACF;AAAA,4CAEC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAC5B,gDAACa,QAAA,EAAK,WAAU,UACd,UAAAZ,uCAAC,aAAA,EAAY,WAAU,eACrB,UAAA;AAAA,QAAAD,kCAAAA,IAAC,SAAA,EAAQ,WAAU,8BAAA,CAA8B;AAAA,QACjDA,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,2BAChC,WAAA,6CAAc,kBAAiB,EAAA,CAClC;AAAA,8CACC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBAAgB,UAAA,sBAEtD;AAAA,QACAA,kCAAAA,IAAC,SAAI,WAAU,yCACb,iDAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,iBAAgB,UAAA;AAAA,UAAA;AAAA,UACnD,gBAAe,6CAAc,kBAAiB,CAAC;AAAA,QAAA,EAAA,CACpD,EAAA,CACF;AAAA,MAAA,EAAA,CACF,GACF,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAC,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GAEvB,UAAA;AAAA,MAAAD,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAACa,QAAA,EACC,UAAAZ,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,QAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,0BAExD;AAAA,8CACC,OAAA,EAAI,WAAU,aACZ,UAAA,WAAW,QAAQ,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,UACxCC,kCAAAA,KAAC,OAAA,EAAgB,WAAU,qCACzB,UAAA;AAAA,UAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,YAAAD,kCAAAA,IAAC,cAAW,SAAQ,SAAQ,WAAU,iBACV,+BAAI,KAAA,GAAO,mBAAmB,SAAS,EAAE,OAAO,SAAS,MAAM,UAAA,CAAW,GACtG;AAAA,YACAC,kCAAAA,KAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,iBACrC,UAAA;AAAA,cAAA,MAAM;AAAA,cAAc;AAAA,YAAA,EAAA,CACvB;AAAA,UAAA,GACF;AAAA,UACAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,cACb,UAAA;AAAA,YAAAD,kCAAAA,IAAC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBACnC,UAAA,eAAe,MAAM,WAAW,EAAA,CACnC;AAAA,YACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,cAAAD,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAO,GAAG,MAAM,YAAY,IAAI,MAAM,aAAa;AAAA,kBACnD,MAAK;AAAA,kBACL,OAAM;AAAA,kBACN,SAAQ;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEVA,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAO,MAAM,gBAAgB,SAAA;AAAA,kBAC7B,MAAK;AAAA,kBACL,OAAM;AAAA,kBACN,SAAQ;AAAA,gBAAA;AAAA,cAAA;AAAA,YACV,EAAA,CACF;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,EAAA,GA3BQ,KA4BV,CACD,EAAA,CACH;AAAA,MAAA,EAAA,CACF,GACF,GACF;AAAA,MAGAA,kCAAAA,IAAC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAAA,kCAAAA,IAACa,QAAA,EACC,UAAAZ,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,QAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,cAExD;AAAA,8CACC,OAAA,EAAI,WAAU,aACZ,UAAA,WAAW,aAAa,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,UAClDC,kCAAAA,KAAC,OAAA,EAA8B,WAAU,qCACvC,UAAA;AAAA,UAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,YAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,qEACb,UAAAA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,+BACrC,UAAA,QAAQ,EAAA,CACX,GACF;AAAA,mDACC,OAAA,EACC,UAAA;AAAA,cAAAA,sCAAC,cAAW,SAAQ,SAAQ,WAAU,eACnC,mBAAS,cACZ;AAAA,cACAC,kCAAAA,KAAC,YAAA,EAAW,SAAQ,WAAU,WAAU,iBACrC,UAAA;AAAA,gBAAA,SAAS;AAAA,gBAAa;AAAA,cAAA,EAAA,CACzB;AAAA,YAAA,EAAA,CACF;AAAA,UAAA,GACF;AAAA,UACAD,kCAAAA,IAAC,cAAW,SAAQ,SAAQ,WAAU,iBACnC,UAAA,eAAe,SAAS,WAAW,EAAA,CACtC;AAAA,QAAA,KAlBQ,SAAS,UAmBnB,CACD,EAAA,CACH;AAAA,MAAA,EAAA,CACF,GACF,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGAA,kCAAAA,IAACa,QAAA,EACC,UAAAZ,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,MAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,oBAExD;AAAA,MACAA,kCAAAA,IAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACtB,UAAA,WAAW,eAAe,IAAI,CAAC,QAAQ,gDACrC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAC5B,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,QAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,0CACb,UAAA;AAAA,UAAAD,sCAAC,cAAW,SAAQ,SAAQ,WAAU,eACnC,iBAAO,QACV;AAAA,UACAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAO,OAAO,MAAM,SAAA;AAAA,cACpB,MAAK;AAAA,cACL,OAAM;AAAA,cACN,SAAQ;AAAA,YAAA;AAAA,UAAA;AAAA,QACV,GACF;AAAA,QACAA,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,2BAChC,UAAA,eAAe,OAAO,WAAW,EAAA,CACpC;AAAA,QACAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,OAAQ,OAAO,gBAAe,6CAAc,gBAAe,KAAM;AAAA,YACjE,WAAU;AAAA,UAAA;AAAA,QAAA;AAAA,MACZ,GACF,EAAA,GArBoC,KAsBtC,CACD,EAAA,CACH;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,IAGAA,kCAAAA,IAACa,QAAA,EACC,UAAAZ,kCAAAA,KAAC,aAAA,EACC,UAAA;AAAA,MAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,sBAAqB,UAAA,mBAExD;AAAA,MACAC,kCAAAA,KAAC,MAAA,EAAK,WAAS,MAAC,SAAS,GACvB,UAAA;AAAA,QAAAA,uCAAC,QAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAA;AAAA,UAAAD,sCAAC,YAAA,EAAW,SAAQ,aAAY,WAAU,sBAAqB,UAAA,kBAE/D;AAAA,UACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,aACb,UAAA;AAAA,YAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,gBAAA,CAAa;AAAA,cACnBA,sCAAC,UAAK,WAAU,iBAAiB,0BAAe,2CAAa,gBAAe,CAAC,EAAA,CAAE;AAAA,YAAA,GACjF;AAAA,YACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,cAAA,CAAW;AAAA,oDAChB,QAAA,EAAK,WAAU,iBAAiB,WAAA,2CAAa,kBAAiB,EAAA,CAAE;AAAA,YAAA,GACnE;AAAA,YACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,gBAAA,CAAa;AAAA,cACnBA,sCAAC,UAAK,WAAU,iBAAiB,0BAAe,2CAAa,kBAAiB,CAAC,EAAA,CAAE;AAAA,YAAA,EAAA,CACnF;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,GACF;AAAA,+CACC,MAAA,EAAK,MAAI,MAAC,IAAI,IAAI,IAAI,GACrB,UAAA;AAAA,UAAAA,sCAAC,YAAA,EAAW,SAAQ,aAAY,WAAU,sBAAqB,UAAA,WAE/D;AAAA,UACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,aACb,UAAA;AAAA,YAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,gBAAA,CAAa;AAAA,cACnBA,kCAAAA,IAAC,UAAK,WAAU,iBAAiB,2BAAgB,2CAAa,gBAAe,KAAK,IAAI,EAAA,CAAE;AAAA,YAAA,GAC1F;AAAA,YACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,cAAA,CAAW;AAAA,cACjBA,kCAAAA,IAAC,QAAA,EAAK,WAAU,iBAAiB,UAAA,KAAK,QAAO,2CAAa,kBAAiB,KAAK,GAAG,EAAA,CAAE;AAAA,YAAA,GACvF;AAAA,YACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,cAAAD,kCAAAA,IAAC,UAAK,UAAA,gBAAA,CAAa;AAAA,cACnBA,kCAAAA,IAAC,UAAK,WAAU,iBAAiB,2BAAgB,2CAAa,kBAAiB,KAAK,IAAI,EAAA,CAAE;AAAA,YAAA,EAAA,CAC5F;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,EAAA,GACF;AAEJ;ACnSO,MAAM,uBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAI,MAAM,SAAS,IAAI;AAEnD,QAAM,oBAAoB,CAAC,SAA0C;AACnE,YAAQ,MAAA;AAAA,MACN,KAAK;AACH,eAAOA,kCAAAA,IAACiB,SAAA,EAAM,OAAM,QAAA,CAAQ;AAAA,MAC9B,KAAK;AACH,eAAOjB,kCAAAA,IAACgB,aAAA,EAAQ,OAAM,UAAA,CAAU;AAAA,MAClC,KAAK;AACH,eAAOhB,kCAAAA,IAACe,iBAAA,EAAY,OAAM,UAAA,CAAU;AAAA,MACtC;AACE,eAAOf,kCAAAA,IAACe,iBAAA,EAAY,OAAM,UAAA,CAAU;AAAA,IAAA;AAAA,EAE1C;AAeA,QAAM,uBAAuB,MAAM;AACjC,gBAAY,CAAC,QAAQ;AAAA,EACvB;AAEA,QAAM,mBAAmB,MAAM;AAC7B,QAAI,cAAc;AAChB,mBAAA;AAAA,IACF;AAAA,EACF;AAEA,+CACGF,QAAA,EAAK,WAAU,UACd,UAAAZ,kCAAAA,KAAC,aAAA,EAAY,WAAU,OAErB,UAAA;AAAA,IAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,0CACb,UAAA;AAAA,MAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,QAAAD,sCAAC,YAAA,EAAW,SAAQ,MAAK,WAAU,iBAAgB,UAAA,wBAEnD;AAAA,QACAA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,OAAO,iBAAiB,UAAU,WAAW;AAAA,YAC7C,OAAO,iBAAiB,UAAU,YAAY;AAAA,YAC9C,MAAK;AAAA,UAAA;AAAA,QAAA;AAAA,MACP,GACF;AAAA,MACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACZ,UAAA;AAAA,QAAA,gBACCD,kCAAAA;AAAAA,UAACc;AAAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACV,iDAAYI,aAAA,EAAQ;AAAA,YACrB,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,QAIHlB,kCAAAA;AAAAA,UAACc;AAAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,SAAS,WAAWd,kCAAAA,IAAC,YAAA,CAAA,CAAW,0CAAM,YAAA,EAAW;AAAA,YAEhD,qBAAW,eAAe;AAAA,UAAA;AAAA,QAAA;AAAA,MAC7B,EAAA,CACF;AAAA,IAAA,GACF;AAAA,IAGC,iBAAiB,UAChBA,kCAAAA,IAAC,OAAA,EAAM,UAAS,WAAU,WAAU,QAClC,UAAAA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,SAAQ,UAAA,8DAAA,CAE5B,GACF,IAEAA,kCAAAA,IAAC,OAAA,EAAM,UAAS,SAAQ,WAAU,QAChC,UAAAA,kCAAAA,IAAC,YAAA,EAAW,SAAQ,SAAQ,UAAA,0DAAA,CAE5B,GACF;AAAA,IAGFC,kCAAAA,KAAC,UAAA,EAAS,IAAI,UAEX,UAAA;AAAA,MAAA,iBAAiB,OAAO,SAAS,KAChCA,kCAAAA,KAAC,KAAA,EAAI,WAAU,QACb,UAAA;AAAA,QAAAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,aAAY,WAAU,mCAAkC,UAAA;AAAA,UAAA;AAAA,UACjE,iBAAiB,OAAO;AAAA,UAAO;AAAA,QAAA,GAC1C;AAAA,QACAD,sCAAC,MAAA,EAAK,OAAK,MAAC,WAAU,wBACnB,UAAA,iBAAiB,OAAO,IAAI,CAAC,OAAO,UACnCC,kCAAAA,KAAC,UAAA,EAAqB,WAAU,QAC9B,UAAA;AAAA,UAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,OAAO,GAC5B;AAAA,UACAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,wBAAwB;AAAA,gBACtB,SAAS;AAAA,gBACT,WAAW;AAAA,cAAA;AAAA,YACb;AAAA,UAAA;AAAA,QACF,EAAA,GAVa,KAWf,CACD,EAAA,CACH;AAAA,MAAA,GACF;AAAA,MAID,iBAAiB,SAAS,SAAS,KAClCC,kCAAAA,KAAC,KAAA,EAAI,WAAU,QACb,UAAA;AAAA,QAAAA,kCAAAA,KAAC,YAAA,EAAW,SAAQ,aAAY,WAAU,sCAAqC,UAAA;AAAA,UAAA;AAAA,UACjE,iBAAiB,SAAS;AAAA,UAAO;AAAA,QAAA,GAC/C;AAAA,QACAD,sCAAC,MAAA,EAAK,OAAK,MAAC,WAAU,2BACnB,UAAA,iBAAiB,SAAS,IAAI,CAAC,SAAS,UACvCC,kCAAAA,KAAC,UAAA,EAAqB,WAAU,QAC9B,UAAA;AAAA,UAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,SAAS,GAC9B;AAAA,UACAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,wBAAwB;AAAA,gBACtB,SAAS;AAAA,gBACT,WAAW;AAAA,cAAA;AAAA,YACb;AAAA,UAAA;AAAA,QACF,EAAA,GAVa,KAWf,CACD,EAAA,CACH;AAAA,MAAA,GACF;AAAA,MAID,iBAAiB,OAAO,WAAW,KAAK,iBAAiB,SAAS,WAAW,KAC5EC,kCAAAA,KAAC,KAAA,EACC,UAAA;AAAA,QAAAD,sCAAC,YAAA,EAAW,SAAQ,aAAY,WAAU,qCAAoC,UAAA,8BAE9E;AAAA,QACAC,kCAAAA,KAAC,MAAA,EAAK,OAAK,MAAC,WAAU,0BACpB,UAAA;AAAA,UAAAA,kCAAAA,KAAC,UAAA,EAAS,WAAU,QAClB,UAAA;AAAA,YAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,SAAS,GAC9B;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,wBAAwB;AAAA,kBACtB,SAAS;AAAA,kBACT,WAAW;AAAA,gBAAA;AAAA,cACb;AAAA,YAAA;AAAA,UACF,GACF;AAAA,UACAC,kCAAAA,KAAC,UAAA,EAAS,WAAU,QAClB,UAAA;AAAA,YAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,SAAS,GAC9B;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,wBAAwB;AAAA,kBACtB,SAAS;AAAA,kBACT,WAAW;AAAA,gBAAA;AAAA,cACb;AAAA,YAAA;AAAA,UACF,GACF;AAAA,UACAC,kCAAAA,KAAC,UAAA,EAAS,WAAU,QAClB,UAAA;AAAA,YAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,SAAS,GAC9B;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,wBAAwB;AAAA,kBACtB,SAAS;AAAA,kBACT,WAAW;AAAA,gBAAA;AAAA,cACb;AAAA,YAAA;AAAA,UACF,GACF;AAAA,UACAC,kCAAAA,KAAC,UAAA,EAAS,WAAU,QAClB,UAAA;AAAA,YAAAD,sCAAC,cAAA,EAAa,WAAU,gBACrB,UAAA,kBAAkB,SAAS,GAC9B;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,wBAAwB;AAAA,kBACtB,SAAS;AAAA,kBACT,WAAW;AAAA,gBAAA;AAAA,cACb;AAAA,YAAA;AAAA,UACF,EAAA,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,GAEJ;AAAA,0CAGC,KAAA,EAAI,WAAU,sCACb,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,MAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,QAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,UAAAD,kCAAAA,IAACiB,SAAA,EAAM,OAAM,SAAQ,UAAS,SAAQ;AAAA,UACtChB,kCAAAA,KAAC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBACnC,UAAA;AAAA,YAAA,iBAAiB,OAAO;AAAA,YAAO;AAAA,UAAA,EAAA,CAClC;AAAA,QAAA,GACF;AAAA,QACAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACb,UAAA;AAAA,UAAAD,kCAAAA,IAACgB,aAAA,EAAQ,OAAM,WAAU,UAAS,SAAQ;AAAA,UAC1Cf,kCAAAA,KAAC,YAAA,EAAW,SAAQ,SAAQ,WAAU,iBACnC,UAAA;AAAA,YAAA,iBAAiB,SAAS;AAAA,YAAO;AAAA,UAAA,EAAA,CACpC;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,MACAD,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAO,iBAAiB,UAAU,yBAAyB;AAAA,UAC3D,OAAO,iBAAiB,UAAU,YAAY;AAAA,UAC9C,SAAQ;AAAA,QAAA;AAAA,MAAA;AAAA,IACV,EAAA,CACF,EAAA,CACF;AAAA,EAAA,EAAA,CACF,EAAA,CACF;AAEJ;ACjQO,MAAM,iBAAgD,MAAM;AACjE,QAAM,CAAC,UAAU,WAAW,IAAIF,aAAAA,SAAS,CAAC;AAC1C,QAAM,CAAC,WAAW,YAAY,IAAIA,aAAAA,SAAS,KAAK;AAEhD,QAAM,kBAAkB,CAAC,OAA6B,aAAqB;AACzE,gBAAY,QAAQ;AAAA,EACtB;AAEA,SACEE,kCAAAA,IAAC,WAAA,EAAU,UAAS,MAClB,UAAAC,uCAAC,KAAA,EAAI,IAAI,EAAE,OAAO,QAAQ,IAAI,EAAA,GAC5B,UAAA;AAAA,IAAAD,kCAAAA,IAAC,cAAW,SAAQ,MAAK,WAAU,MAAK,cAAY,MAAC,UAAA,yBAAA,CAErD;AAAA,IACAA,kCAAAA,IAAC,cAAW,SAAQ,SAAQ,OAAM,kBAAiB,cAAY,MAAC,UAAA,+EAAA,CAEhE;AAAA,IAEAC,uCAAC,SAAM,IAAI,EAAE,OAAO,QAAQ,IAAI,KAC9B,UAAA;AAAA,MAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAO;AAAA,UACP,UAAU;AAAA,UACV,gBAAe;AAAA,UACf,WAAU;AAAA,UACV,SAAQ;AAAA,UACR,eAAc;AAAA,UAEd,UAAA;AAAA,YAAAD,kCAAAA,IAAC,KAAA,EAAI,OAAM,eAAA,CAAe;AAAA,YAC1BA,kCAAAA,IAAC,KAAA,EAAI,OAAM,kBAAA,CAAkB;AAAA,YAC7BA,kCAAAA,IAAC,KAAA,EAAI,OAAM,cAAA,CAAc;AAAA,YACzBA,kCAAAA,IAAC,KAAA,EAAI,OAAM,cAAA,CAAc;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MAG3BA,kCAAAA,IAAC,YAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA,IAAC,kBAAe,EAAA,CAClB;AAAA,MAEAA,kCAAAA,IAAC,UAAA,EAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,UAAU,CAAO,SAAS;AACxB,oBAAQ,IAAI,kBAAkB,IAAI;AAAA,UAEpC;AAAA,UACA,UAAU,MAAM,YAAY,CAAC;AAAA,QAAA;AAAA,MAAA,GAEjC;AAAA,MAEAA,kCAAAA,IAAC,UAAA,EAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,kBAAkB;AAAA,YAChB,SAAS;AAAA,YACT,QAAQ,CAAA;AAAA,YACR,UAAU,CAAA;AAAA,UAAC;AAAA,QACb;AAAA,MAAA,GAEJ;AAAA,MAEAA,kCAAAA,IAAC,UAAA,EAAS,OAAO,UAAU,OAAO,GAChC,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,YAAY;AAAA,YACV,SAAS,CAAA;AAAA,YACT,QAAQ,CAAA;AAAA,YACR,cAAc,CAAA;AAAA,YACd,gBAAgB,CAAA;AAAA,UAAC;AAAA,QACnB;AAAA,MAAA,EACF,CACF;AAAA,IAAA,EAAA,CACF;AAAA,EAAA,EAAA,CACF,EAAA,CACF;AAEJ;"}